import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
var SlideToggleComponent = (function () {
    function SlideToggleComponent() {
        this.value = false;
        this.onText = 'ON';
        this.offText = 'OFF';
        this.onColor = '#0088cc';
        this.offColor = '#eceeef';
        this.valueChange = new EventEmitter();
    }
    SlideToggleComponent.prototype.onToggle = function () {
        this.value = !this.value;
        this.valueChange.emit(this.value);
    };
    Object.defineProperty(SlideToggleComponent.prototype, "color", {
        get: function () {
            return this.value ? this.onColor : this.offColor;
        },
        enumerable: true,
        configurable: true
    });
    return SlideToggleComponent;
}());
export { SlideToggleComponent };
SlideToggleComponent.decorators = [
    { type: Component, args: [{
                selector: 'slide-toggle',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: "<label class=\"switch\"> <input class=\"switch-input\" type=\"checkbox\" [checked]=\"value\" (change)=\"onToggle()\"/> <span class=\"switch-label\" [attr.data-on]=\"onText\" [attr.data-off]=\"offText\" [style.background]=\"color\"></span>  <span class=\"switch-handle\"></span>  </label>",
                styles: [".switch { position: relative; display: block; width: 100px; height: 30px; padding: 3px; margin: 2px; background: linear-gradient(to bottom, #eeeeee, #FFFFFF 25px); background-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF 25px); border-radius: 18px; box-shadow: inset 0 -1px white, inset 0 1px 1px rgba(0, 0, 0, 0.05); cursor: pointer; box-sizing:content-box; } .switch-input { position: absolute; top: 0; left: 0; opacity: 0; box-sizing:content-box; } .switch-label { position: relative; display: block; height: inherit; font-size: 10px; text-transform: uppercase; border-radius: inherit; box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.12), inset 0 0 2px rgba(0, 0, 0, 0.15); box-sizing:content-box; } .switch-label:before, .switch-label:after { position: absolute; top: 50%; margin-top: -.5em; line-height: 1; -webkit-transition: inherit; -moz-transition: inherit; -o-transition: inherit; transition: inherit; box-sizing:content-box; } .switch-label:before { content: attr(data-off); right: 11px; color: #aaaaaa; text-shadow: 0 1px rgba(255, 255, 255, 0.5); } .switch-label:after { content: attr(data-on); left: 11px; color: #FFFFFF; text-shadow: 0 1px rgba(0, 0, 0, 0.2); opacity: 0; } .switch-input:checked ~ .switch-label { background: #E1B42B; box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.15), inset 0 0 3px rgba(0, 0, 0, 0.2); } .switch-input:checked ~ .switch-label:before { opacity: 0; } .switch-input:checked ~ .switch-label:after { opacity: 1; } .switch-handle { position: absolute; top: 4px; left: 4px; width: 28px; height: 28px; background: linear-gradient(to bottom, #FFFFFF 40%, #f0f0f0); background-image: -webkit-linear-gradient(top, #FFFFFF 40%, #f0f0f0); border-radius: 100%; box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2); } .switch-handle:before { content: \"\"; position: absolute; top: 50%; left: 50%; margin: -6px 0 0 -6px; width: 12px; height: 12px; background: linear-gradient(to bottom, #eeeeee, #FFFFFF); background-image: -webkit-linear-gradient(top, #eeeeee, #FFFFFF); border-radius: 6px; box-shadow: inset 0 1px rgba(0, 0, 0, 0.02); } .switch-input:checked ~ .switch-handle { left: 74px; box-shadow: -1px 1px 5px rgba(0, 0, 0, 0.2); } .switch-label, .switch-handle { transition: All 0.3s ease; -webkit-transition: All 0.3s ease; -moz-transition: All 0.3s ease; -o-transition: All 0.3s ease; }"]
            },] },
];
/** @nocollapse */
SlideToggleComponent.ctorParameters = function () { return []; };
SlideToggleComponent.propDecorators = {
    'value': [{ type: Input },],
    'onText': [{ type: Input },],
    'offText': [{ type: Input },],
    'onColor': [{ type: Input },],
    'valueChange': [{ type: Output },],
};
//# sourceMappingURL=slide-toggle.component.js.map