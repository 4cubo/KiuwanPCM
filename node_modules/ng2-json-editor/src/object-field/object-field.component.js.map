{"version":3,"sources":["../../../staging/src/object-field/object-field.component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;;;;;;;;;;;AAGF,OAAO,EAAE,SAAA,EAAW,KAAA,EAAiC,uBAAA,EAAyB,iBAAA,EAAkB,MAAO,eAAA,CAAgB;AAIvH,OAAO,EAAE,sBAAA,EAAuB,MAAO,mBAAA,CAAoB;AAC3D,OAAO,EAAE,iBAAA,EAAmB,gBAAA,EAAkB,eAAA,EAAiB,gBAAA,EAAkB,eAAA,EAAgB,MAAO,oBAAA,CAAqB;AAI7H;IAA0C,wCAAsB;IAO9D,8BAAmB,iBAAoC,EAC9C,eAAgC,EAChC,gBAAkC,EAClC,eAAgC,EAChC,iBAAoC,EACpC,gBAAkC;QAL3C,YAOE,kBAAM,iBAAiB,EAAE,eAAe,EAAE,eAAe,EAAE,iBAAiB,EAAE,gBAAgB,CAAC,SAChG;QARkB,uBAAiB,GAAjB,iBAAiB,CAAmB;QAC9C,qBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,qBAAe,GAAf,eAAe,CAAiB;QAChC,uBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,sBAAgB,GAAhB,gBAAgB,CAAkB;QAP1C,4BAAsB,GAAG,KAAK,CAAC;;IAUhC,CAAC;IAED,sBAAI,uCAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxD,CAAC;;;OAAA;IAED,0CAAW,GAAX,UAAY,IAAY;QACtB,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAED,iDAAkB,GAAlB,UAAmB,IAAY;QAC7B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAE;IACrF,CAAC;IAED,wEAAyC,GAAzC,UAA0C,GAAW;QACnD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,8BAA8B,CAAC;IACpE,CAAC;IAwBH,2BAAC;AAAD,CAxDA,AAwDC,CAxDyC,sBAAsB;;AAiCzD,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,cAAc;gBACxB,MAAM,EAAE,CAAC,6CAA6C,CAAC;gBACvD,QAAQ,EAAE,w0EAAw0E;gBACl1E,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,EAP6F,CAO7F,CAAC;AACK,mCAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,wBAAwB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC3C,CAAC","file":"object-field.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\n\nimport { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Map, Set } from 'immutable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { AbstractFieldComponent } from '../abstract-field';\nimport { AppGlobalsService, JsonStoreService, PathUtilService, KeysStoreService, ProblemsService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n\nexport class ObjectFieldComponent extends AbstractFieldComponent {\n\n   value: Map<string, any>;\n   schema: JSONSchema;\n   path: Array<any>;\n   isComplexListFieldItem = false;\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public pathUtilService: PathUtilService,\n    public changeDetectorRef: ChangeDetectorRef,\n    public keysStoreService: KeysStoreService,\n    ) {\n    super(appGlobalsService, problemsService, pathUtilService, changeDetectorRef, jsonStoreService);\n  }\n\n  get keys$(): ReplaySubject<Set<string>> {\n    return this.keysStoreService.forPath(this.pathString);\n  }\n\n  deleteField(name: string) {\n    const fieldPath = this.path.concat(name);\n    this.jsonStoreService.removeIn(fieldPath);\n  }\n\n  isPropertyDisabled(name: string): boolean {\n    return this.schema.properties[name].disabled && !this.appGlobalsService.adminMode ;\n  }\n\n  getTitleDropdownItemTemplateNamesForChild(key: string): Array<string> {\n    return this.schema.properties[key].titleDropdownItemTemplateNames;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'object-field',\n  styles: [\"table.table { background-color: #f9f9f9; } \"],\n  template: \"<div [id]=\\\"pathString\\\"> <div *ngIf=\\\"isComplexListFieldItem\\\" class=\\\"pull-right\\\"> <add-nested-field-dropdown [pathString]=\\\"pathString\\\" [schema]=\\\"schema\\\" [isDisabled]=\\\"disabled\\\"></add-nested-field-dropdown> </div> <table class=\\\"table\\\" [ngClass]=\\\"redLeftBorderClass\\\"> <tr *ngFor=\\\"let key of keys$ | async; trackBy:trackByElement\\\"> <!-- SUB FIELD TITLE MENU --> <td class=\\\"label-holder\\\"> <div> <title-dropdown [title]=\\\"key | underscoreToSpace\\\" [isDisabled]=\\\"isPropertyDisabled(key)\\\"> <li *ngIf=\\\"schema.properties[key].type === 'array'\\\" class=\\\"title-dropdown-item\\\"> <add-new-element-button [path]=\\\"getPathForChild(key)\\\" [schema]=\\\"schema.properties[key]\\\"></add-new-element-button> </li> <li class=\\\"title-dropdown-item\\\"> <button type=\\\"button\\\" class=\\\"editor-btn-delete editor-btn-delete-text\\\" (click)=\\\"deleteField(key)\\\">Delete</button> </li> <ng-container *ngIf=\\\"getTitleDropdownItemTemplateNamesForChild(key)\\\"> <li *ngFor=\\\"let templateName of getTitleDropdownItemTemplateNamesForChild(key)\\\" class=\\\"title-dropdown-item custom-title-dropdown-item\\\"> <ng-template [ngTemplateOutlet]=\\\"appGlobalsService.templates[templateName]\\\"></ng-template> </li> </ng-container> </title-dropdown> </div> </td> <!-- SUB FIELD COMPONENT --> <td> <any-type-field [value]=\\\"value.get(key) | selfOrEmpty:schema.properties[key]\\\" [schema]=schema.properties[key] [path]=\\\"getPathForChild(key)\\\"></any-type-field> </td> </tr> <!-- ADD PATCHES FOR CHILDREN --> <tr *ngFor=\\\"let patch of addJsonPatches\\\"> <td class=\\\"label-holder\\\"> <title-dropdown [title]=\\\"patch.path | lastPathElement | underscoreToSpace\\\" [isDisabled]=\\\"true\\\"></title-dropdown> </td> <td> <add-or-replace-patch [patch]=\\\"patch\\\"></add-or-replace-patch> </td> </tr> <!-- REMOVE PATCH FOR ITSELF --> <tr *ngIf=\\\"removeJsonPatch\\\"> <patch-actions [patch]=\\\"removeJsonPatch\\\"></patch-actions> </tr> <!-- ADD SUB FIELD FROM SCHEMA DROPDOWN --> <tr> <td class=\\\"button-holder\\\"> <add-field-dropdown [fields]=\\\"keys$ | async\\\" [pathString]=\\\"pathString\\\" [schema]=\\\"schema\\\" [isDisabled]=\\\"disabled\\\"> <i class=\\\"fa fa-plus\\\"></i> <i class=\\\"fa fa-caret-down\\\"></i> </add-field-dropdown> </td> </tr> </table> <!-- REPLACE PATCH FOR ITSELF --> <div *ngIf=\\\"replaceJsonPatches && replaceJsonPatches[0]\\\"> <add-or-replace-patch [patch]=\\\"replaceJsonPatches[0]\\\"></add-or-replace-patch> </div> </div> \",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AppGlobalsService, },\n{type: ProblemsService, },\n{type: JsonStoreService, },\n{type: PathUtilService, },\n{type: ChangeDetectorRef, },\n{type: KeysStoreService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'schema': [{ type: Input },],\n'path': [{ type: Input },],\n'isComplexListFieldItem': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}