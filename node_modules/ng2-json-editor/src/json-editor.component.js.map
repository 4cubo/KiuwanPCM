{"version":3,"sources":["../../staging/src/json-editor.component.ts"],"names":[],"mappings":"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","file":"json-editor.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { fromJS, Map, Set } from 'immutable';\n\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { AbstractSubscriberComponent } from './abstract-subscriber';\nimport {\n  AppGlobalsService,\n  JsonStoreService,\n  JsonUtilService,\n  JsonSchemaService,\n  KeysStoreService,\n  PathUtilService,\n  RecordFixerService,\n  SchemaFixerService,\n  TabsUtilService,\n  ProblemsService\n} from './shared/services';\n\nimport {\n  JsonEditorConfig,\n  Preview,\n  SchemaValidationProblems,\n  JsonPatch,\n  Shortcut,\n  CustomShortcutKeys,\n  JSONSchema\n} from './shared/interfaces';\n\n\n\n\nexport class JsonEditorComponent extends AbstractSubscriberComponent implements OnChanges, OnInit {\n\n   config: JsonEditorConfig;\n   record: object;\n  // original schema\n   schema: any;\n   problemMap: SchemaValidationProblems;\n   jsonPatches: Array<JsonPatch>;\n   templates: { [templateName: string]: TemplateRef<any> };\n\n   recordChange = new EventEmitter<Object>();\n   jsonPatchesChange = new EventEmitter<Array<JsonPatch>>();\n   validationProblems = new EventEmitter<SchemaValidationProblems>();\n\n  readonly pathString = '';\n  _record: Map<string, any>;\n  tabNames: Array<string>;\n  previews: Array<Preview>;\n  isPreviewerHidden: boolean;\n  isBottomConsoleOpen = false;\n  isSidebarCollapsed = true;\n  bottomConsoleActiveTab = '';\n  customShortcutKeys: CustomShortcutKeys;\n  // altered schema enchanced with configs\n  fixedSchema: JSONSchema;\n\n  // used to decide if the [record] is change caused by recordChange.emit or parent component\n  private lastEmittedRecord: object;\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public jsonUtilService: JsonUtilService,\n    public jsonSchemaService: JsonSchemaService,\n    public keysStoreService: KeysStoreService,\n    public recordFixerService: RecordFixerService,\n    public schemaFixerService: SchemaFixerService,\n    public tabsUtilService: TabsUtilService,\n    public pathUtilService: PathUtilService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.appGlobalsService.adminMode$\n      .takeUntil(this.isDestroyed)\n      .subscribe(adminMode => {\n        this.keysStoreService.buildKeysMap(this._record, this.fixedSchema);\n      });\n\n    // listen for all changes on json\n    this.jsonStoreService.json$\n      .skipWhile(json => json === this._record)\n      .takeUntil(this.isDestroyed)\n      .subscribe(json => {\n        this._record = json;\n        // emit the change as plain JS object\n        this.lastEmittedRecord = json.toJS();\n        this.recordChange.emit(this.lastEmittedRecord);\n      });\n\n    // list for all changes on jsonPatches\n    this.jsonStoreService.jsonPatches$\n      .takeUntil(this.isDestroyed)\n      .subscribe(patches => {\n        this.jsonPatchesChange.emit(patches);\n      });\n\n    this.problemsService.internalProblemMap$\n      .takeUntil(this.isDestroyed)\n      .subscribe(internalProblemMap => {\n        this.validationProblems.emit(internalProblemMap);\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // throw error if a required input is undefined\n    if (changes['schema'] && !this.schema) {\n      this.throwInputUndefined('schema');\n    }\n    if (changes['record'] && !this.record) {\n      this.throwInputUndefined('record');\n    }\n\n    // warn if an important input is undefined\n    if (changes['config'] && !this.config) {\n      this.config = {};\n      console.warn(`[config] is undefined, make sure that is intended.`);\n    }\n\n    const recordChanged = changes['record'] && this.record !== this.lastEmittedRecord;\n    const schemaChanged = changes['schema'] || changes['config'];\n\n    if (schemaChanged) {\n      this.fixedSchema = this.schemaFixerService.fixSchema(this.schema, this.config.schemaOptions);\n      this.jsonSchemaService.setSchema(this.fixedSchema);\n    }\n\n    if (schemaChanged || recordChanged) {\n      this.record = this.recordFixerService.fixRecord(this.record, this.fixedSchema);\n      this._record = fromJS(this.record);\n      this.jsonStoreService.setJson(this._record);\n      this.keysStoreService.buildKeysMap(this._record, this.fixedSchema);\n    }\n\n\n    if (changes['config']) {\n      this.appGlobalsService.config = this.config;\n      if (this.config.tabsConfig) {\n        this.tabNames = this.tabsUtilService.getTabNames(this.config.tabsConfig);\n        this.tabsUtilService.activeTabName$.subscribe(tabName => { this.appGlobalsService.activeTabName = tabName; });\n        this.appGlobalsService.activeTabName = this.config.tabsConfig.defaultTabName;\n      }\n\n      this.customShortcutKeys = this.config.shortcuts;\n    }\n\n    if (recordChanged || changes['config']) {\n      this.extractPreviews();\n    }\n\n    if (changes['jsonPatches']) {\n      if (this.jsonPatches) {\n        this.jsonStoreService.setJsonPatches(this.jsonPatches);\n      }\n    }\n\n    if (changes['problemMap']) {\n      this.problemsService.externalProblems = this.problemMap;\n    }\n\n    if (changes['templates']) {\n      this.appGlobalsService.templates = this.templates || {};\n    }\n  }\n\n  private throwInputUndefined(inputName: string) {\n    throw new Error(`[${inputName}] is undefined!\n      if you are fetching ${inputName} async then please consider using:\n        <json-editor *ngIf=\"${inputName}\" [${inputName}]=\"${inputName}\" ...> </json-editor>\n      in order to wait for it to be fetched before initializing json-editor`\n    );\n  }\n\n  /**\n   * Converts PreviewConfig instances to Preview instances and appends to `previews` array.\n   */\n  private extractPreviews() {\n    if (!this.isPreviewerDisabled) {\n      // if url is not set directly, populate it\n      this.previews = [];\n      this.config.previews\n        .forEach(previewConfig => {\n          let url: string;\n          if (previewConfig.url) {\n            url = previewConfig.url;\n          } else if (previewConfig.getUrl) {\n            url = previewConfig.getUrl(this.record);\n          } else if (previewConfig.urlPath) {\n            try {\n              url = this.jsonUtilService.getValueInPath(this.record, previewConfig.urlPath);\n            } catch (error) {\n              console.warn(`Path ${previewConfig.urlPath} in preview config is not present in the input record`);\n            }\n          } else {\n            throw new Error('Either url, urlPath or getUrl should be set for a preview');\n          }\n          if (url) {\n            this.previews.push({\n              name: previewConfig.name,\n              type: previewConfig.type,\n              url: url\n            });\n          }\n        });\n    }\n  }\n\n  get keys$(): ReplaySubject<Set<string>> {\n    return this.keysStoreService.forPath(this.pathString);\n  }\n\n  get isPreviewerDisabled(): boolean {\n    return this.config.previews === undefined || this.config.previews.length === 0;\n  }\n\n  set activeTabName(tabName: string) {\n    this.appGlobalsService.activeTabName = tabName;\n  }\n\n  isActiveTab(tabName) {\n    return this.appGlobalsService.activeTabName === tabName;\n  }\n\n  get shorterEditorContainerClass(): string {\n    return this.isBottomConsoleOpen ? 'shorter-editor-container' : '';\n  }\n\n  openBottomConsole(tabName: string) {\n    this.isBottomConsoleOpen = true;\n    this.bottomConsoleActiveTab = tabName;\n  }\n\n  trackByElement(index: number, element: any): any {\n    return element;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'json-editor',\n  encapsulation: ViewEncapsulation.None,\n  styles: [\"html, body { height: 100%; background-color: #ecf0f1; overflow-x: hidden; } .editor-container { display: flex; flex-direction: row; height: 100%; width: 100%; margin-right: 0px; margin-left: 0px; } .editor-container .row { margin-left: 0px; margin-right: 0px; } .bs-tooltip-right { width: 120px !important; } .shorter-editor-container { height: 75%; } #ng2-json-editor { /* Styles for tabset */ } #ng2-json-editor .dropdown-menu { max-height: 400px; overflow-y: auto; } #ng2-json-editor .hidden { display: none; } #ng2-json-editor th { font-weight: 400; padding: 1px 0px 1px 6px; background-color: #ecf0f1; color: #8e8e8e; font-weight: bold; } #ng2-json-editor th .dropdown-filter-container { font-weight: initial; } #ng2-json-editor td { background-color: #f9f9f9; border: none; padding: 0; } #ng2-json-editor td > * { vertical-align: middle; } #ng2-json-editor td.label-holder { width: 1%; white-space: nowrap; padding: 3px; background-color: #dae8ef; border-top: 1px solid #bdc3c7; } #ng2-json-editor td.label-holder button { color: #595959; } #ng2-json-editor tr.error td, #ng2-json-editor td.error { color: white; background-color: #e74c3c !important; transition: all .4s; } #ng2-json-editor tbody { border: none; } #ng2-json-editor table { margin-bottom: 0px !important; } #ng2-json-editor .main-container.compact { border-left: none; } #ng2-json-editor .main-container { font-size: 13px; border-left: 1px solid #a5adb5; height: 100%; overflow: auto; } #ng2-json-editor .main-container .tab-container > .nav-tabs { font-size: 14px; } #ng2-json-editor .main-container > add-field-dropdown div.dropdown { width: 100vh; } #ng2-json-editor .main-container > add-field-dropdown ul.dropdown-menu { right: 0px; padding-bottom: 15px; } #ng2-json-editor .main-container > add-field-dropdown button.btn-add-field-dropdown { background: white; padding: 5px; opacity: 0.9; line-height: normal; font-size: 16px; width: 100%; } #ng2-json-editor .main-container > add-field-dropdown button.btn-add-field-dropdown:hover { opacity: 1; color: black; } #ng2-json-editor .add-field-dropdown-container { width: 100%; } #ng2-json-editor .middle.main-container { padding: 0px; } #ng2-json-editor .menu-container { display: flex; flex-direction: column; justify-content: space-between; background-color: #2c3e50; height: 100%; width: 0%; overflow-x: hidden; opacity: 0; visibility: hidden; transition: width 0.1s ease-in; } #ng2-json-editor .menu-container div.dropdown { width: 100vh; } #ng2-json-editor .menu-container ul.dropdown-menu { right: 0px; padding-bottom: 15px; } #ng2-json-editor .menu-container button.btn-add-field-dropdown { background: white; padding: 5px; opacity: 0.9; line-height: normal; font-size: 16px; width: 100%; } #ng2-json-editor .menu-container button.btn-add-field-dropdown:hover { opacity: 1; color: black; } #ng2-json-editor .menu-container.open { opacity: 1; visibility: visible; width: 280px; padding-left: 5px; } #ng2-json-editor .collapsed-menu-container { position: relative; background-color: #1D2D3D; flex: 0 0 50px; height: 100%; display: flex; flex-direction: column; justify-content: flex-end; align-items: center; } #ng2-json-editor .collapsed-menu-container .add-field-button { position: absolute; top: 0px; margin-bottom: 25px; display: flex; flex-wrap: wrap; flex-direction: column; justify-content: center; width: 100%; cursor: pointer; } #ng2-json-editor .collapsed-menu-container .add-field-button .btn-add-field-dropdown { display: flex; justify-content: center; width: 100%; opacity: 1; background-color: transparent; margin-top: 10px; } #ng2-json-editor .collapsed-menu-container .add-field-button .btn-add-field-dropdown:hover, #ng2-json-editor .collapsed-menu-container .add-field-button .btn-add-field-dropdown:focus, #ng2-json-editor .collapsed-menu-container .add-field-button .btn-add-field-dropdown:active { outline: none; } #ng2-json-editor .collapsed-menu-container .add-field-button .btn-add-field-dropdown i { color: #ddd; } #ng2-json-editor .collapsed-menu-container .add-field-button .btn-add-field-dropdown i:hover { color: white; } #ng2-json-editor .collapsed-menu-container .preview-icon { display: flex; flex-direction: column; align-items: center; justify-content: center; cursor: pointer; height: 30px; border-radius: 20%; border: 2px solid #ddd; width: 30px; } #ng2-json-editor .collapsed-menu-container .preview-icon .fa { color: #ddd; } #ng2-json-editor .collapsed-menu-container .preview-icon .fa:hover { color: white; } #ng2-json-editor .collapsed-menu-container .open-sidebar-container { cursor: pointer; width: 100%; display: flex; justify-content: center; margin-top: 20px; border-top: 2px solid #283948; border-right: 2px solid #283948; color: #ddd; } #ng2-json-editor .collapsed-menu-container .open-sidebar-container:hover { color: white; text-shadow: 3px 3px 14px #2a5d88; } #ng2-json-editor .collapsed-menu-container .open-sidebar-container .fa-angle-right { transition: all 0.5s ease-in-out; -webkit-transition: all 0.5s ease-in-out; -ms-transition: all 0.5s ease-in-out; } #ng2-json-editor .collapsed-menu-container .open-sidebar-container .fa-angle-right.rotate { transform: rotate(-180deg); -webkit-transform: rotate(-180deg); -ms-transform: rotate(-180deg); } #ng2-json-editor .middle.main-container { flex-basis: 60%; } #ng2-json-editor .middle.main-container.maximizeEditor { flex-grow: 2; } #ng2-json-editor .right.main-container { flex-basis: 40%; flex-shrink: 0; } #ng2-json-editor .right.main-container.minimizePreview { flex-basis: 0%; } #ng2-json-editor .right.main-container .btn-toggle { position: fixed; right: 0; } #ng2-json-editor .editor-btn-delete { font-weight: bold; line-height: 1; text-shadow: 0 1px 0 #fff; opacity: 0.2; background: transparent; border: 0; padding: 0 0 3px 3px; } #ng2-json-editor .editor-btn-delete:hover { color: red; opacity: 0.6; } #ng2-json-editor .editor-btn-delete.editor-btn-delete-text { font-size: 13px; opacity: 0.5; padding: 0px; } #ng2-json-editor .custom-title-dropdown-item button { font-weight: bold; line-height: 1; text-shadow: 0 1px 0 #fff; opacity: 0.2; background: transparent; border: 0; padding: 0 0 3px 3px; font-size: 13px; opacity: 0.5; padding: 0px; } #ng2-json-editor .custom-title-dropdown-item button:hover { color: #337ab7; opacity: 0.6; } #ng2-json-editor .editor-btn-move-down { padding-bottom: 0; } #ng2-json-editor .editor-btn-move-up, #ng2-json-editor .editor-btn-move-down { padding: 0; font-size: 11px; border: 0; background: transparent; opacity: 0.2; } #ng2-json-editor .editor-btn-move-up:hover, #ng2-json-editor .editor-btn-move-down:hover { opacity: 0.6; } #ng2-json-editor ul.pagination-top { margin: -16px 0px 0px 0px; } #ng2-json-editor td.button-holder, #ng2-json-editor th.button-holder { width: 40.33px; text-align: center; vertical-align: middle; } #ng2-json-editor td.button-holder.sortable, #ng2-json-editor th.button-holder.sortable { width: 46px; } #ng2-json-editor th.button-holder .add-field-dropdown-container { width: 100%; } #ng2-json-editor th.button-holder .btn-add-field-dropdown { float: right; } #ng2-json-editor label { color: #c1c1c1; } #ng2-json-editor .highlight { border: 2px solid yellow !important; } #ng2-json-editor table.editable-inner-table { table-layout: fixed; } #ng2-json-editor table.editable-inner-table > tbody > tr { border-bottom: 1px solid white !important; } #ng2-json-editor table.editable-inner-table add-new-element-button .button-container { padding-left: 6px; } #ng2-json-editor table.editable-inner-table label { display: inline; font-weight: initial; padding-left: 5px; } #ng2-json-editor table.editable-inner-table .dropdown-menu { left: inherit; right: 0px; min-width: 100px; } #ng2-json-editor .title-dropdown-item button { width: 100%; text-align: left; padding-left: 20px !important; padding-right: 20px !important; } #ng2-json-editor .title-dropdown-item:hover { background: #f5f5f5; } #ng2-json-editor .tooltip.top .tooltip-arrow { border-top-color: transparent; } #ng2-json-editor .tooltip { width: 90%; } #ng2-json-editor button.btn-toggle { float: right; margin-top: 5px; margin-right: 5px; } #ng2-json-editor .autocomplete-container .dropdown { position: relative !important; top: 0px !important; left: 0px !important; } #ng2-json-editor div.admin-mode { padding-top: 8px; width: 100%; } #ng2-json-editor label.admin-mode { color: #e0dfdf; font-size: 13px; font-weight: normal; width: 90%; padding-left: 4px; } #ng2-json-editor hr { margin-top: 5px; margin-bottom: 5px; border-top: 1px solid #757575; } #ng2-json-editor .btn.btn-success { background-color: #16a085; border-color: #16a085; color: white; } #ng2-json-editor .btn.btn-success:hover, #ng2-json-editor .btn.btn-success:active, #ng2-json-editor .btn.btn-success:focus { background-color: #19b698 !important; color: white; } #ng2-json-editor .btn .fa { margin-right: 2px; } #ng2-json-editor .nav { margin-bottom: 3px; } #ng2-json-editor .nav-tabs > li.active > a, #ng2-json-editor .nav-tabs > li.active > a:hover, #ng2-json-editor .nav-tabs > li.active > a:focus { border-top: 1px solid #2c3e50; background-color: white; } #ng2-json-editor .nav-tabs > li > a:hover { border-top: 1px solid #2c3e50; border-bottom: 1px solid transparent; border-left: 1px solid transparent; border-right: 1px solid transparent; transition: all .4s; } #ng2-json-editor .nav.nav-tabs { border-bottom: 5px solid white; box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.24); } #ng2-json-editor .nav-tabs > li > a { margin-right: 0px; border-radius: 0px; border-right: 1px solid #e0e2e2; } #ng2-json-editor .disabled { cursor: not-allowed; } #ng2-json-editor .disabled div { pointer-events: none; } #ng2-json-editor .disabled div input, #ng2-json-editor .disabled div button, #ng2-json-editor .disabled div a, #ng2-json-editor .disabled div i, #ng2-json-editor .disabled div string-input > div { opacity: .5; } #ng2-json-editor .disabled button { pointer-events: none; } #ng2-json-editor .pagination > .active > a { background-color: #31617B; border-color: #31617B; } #ng2-json-editor .btn.btn-switch { background-color: #7DA0B3; } #ng2-json-editor .btn.btn-switch.active { background-color: #31617B; } .bottom-console-container { height: 25%; overflow: hidden; } .bottom-console-container .tab-content { height: 90%; overflow: scroll; } .red-left-border { border-left: 9px solid #e74c3c !important; } .max-height-90-vh { max-height: 90vh; } .max-height-70-vh { max-height: 70vh; } complex-list-field add-field-dropdown { display: none; } \"],\n  template: \"<div id=\\\"ng2-json-editor\\\" class=\\\"editor-container\\\" [ngClass]=\\\"shorterEditorContainerClass\\\"> <div  *ngIf=\\\"!config.compact\\\" class=\\\"collapsed-menu-container\\\"> <add-field-dropdown [fields]=\\\"keys$ | async\\\" [pathString]=\\\"pathString\\\"  [schema]=\\\"fixedSchema\\\" class=\\\"add-field-button\\\"> <i class=\\\"fa fa-plus fa-2x\\\" tooltip=\\\"Add Field\\\" placement=\\\"right\\\"></i> </add-field-dropdown> <span id=\\\"preview-toggle-icon\\\" tooltip=\\\"{{isPreviewerHidden ? 'Show Preview' : 'Hide Preview'}}\\\" placement=\\\"right\\\"class=\\\"preview-icon\\\" (click)=\\\"isPreviewerHidden = !isPreviewerHidden\\\"> <i class=\\\"fa fa-1x\\\" [ngClass]=\\\"!isPreviewerHidden ? 'fa-eye-slash' : 'fa-eye'\\\"></i> </span> <bottom-console-badges (badgeClick)=\\\"openBottomConsole($event)\\\"></bottom-console-badges> <span class=\\\"open-sidebar-container\\\" (click)=\\\"isSidebarCollapsed = !isSidebarCollapsed\\\"> <i class=\\\"fa fa-angle-right fa-4x\\\" [class.rotate]=\\\"!isSidebarCollapsed\\\"></i> </span> </div> <div *ngIf=\\\"!config.compact\\\" class=\\\"menu-container\\\" [ngClass]=\\\"isSidebarCollapsed ? 'close' : 'open'\\\"> <tree-menu [record]=\\\"_record\\\" [schema]=\\\"fixedSchema\\\"></tree-menu> <hr> <div *ngIf=\\\"config.enableAdminModeSwitch\\\" class=\\\"admin-mode\\\" tooltip=\\\"Allows editing all fields (use with care)\\\"> <input id=\\\"admin-mode-checkbox\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"appGlobalsService.adminMode\\\" /> <label class=\\\"admin-mode\\\" for=\\\"admin-mode-checkbox\\\">Enable Admin Mode</label> </div> <hr> </div> <div id=\\\"middle-main-container\\\" class=\\\"middle main-container\\\" [shortcuts]=\\\"customShortcutKeys\\\" [ngClass]=\\\"{ 'maximizeEditor' : isPreviewerHidden, 'compact' : config.compact }\\\"> <add-field-dropdown *ngIf=\\\"config.compact\\\" [fields]=\\\"keys$ | async\\\" [pathString]=\\\"pathString\\\"  [schema]=\\\"fixedSchema\\\">Add field</add-field-dropdown> <tabset *ngIf=\\\"config.tabsConfig\\\"> <tab *ngFor=\\\"let tabName of tabNames; trackBy:trackByElement\\\" [heading]=\\\"tabName\\\" (select)=\\\"activeTabName = tabName\\\" [active]=\\\"isActiveTab(tabName)\\\"> <sub-record [value]=\\\"_record\\\" [tabName]=\\\"tabName\\\" [schema]=\\\"fixedSchema\\\" [keys]=\\\"keys$ | async\\\" [pathString]=\\\"pathString\\\"></sub-record> </tab> </tabset> <sub-record *ngIf=\\\"!config.tabsConfig\\\" [value]=\\\"_record\\\" [schema]=\\\"fixedSchema\\\" [keys]=\\\"keys$ | async\\\" [pathString]=\\\"pathString\\\"></sub-record> </div> <div id=\\\"right-main-container\\\" *ngIf=\\\"!isPreviewerDisabled\\\" class=\\\"main-container right\\\" [ngClass]=\\\"isPreviewerHidden ? 'minimizePreview' : 'maximizePreview' \\\"> <editor-previewer [hidden]=\\\"isPreviewerHidden\\\" [previews]=\\\"previews\\\"> </editor-previewer> </div> </div> <bottom-console *ngIf=\\\"!config.compact\\\" [activeTab]=\\\"bottomConsoleActiveTab\\\" [isOpen]=\\\"isBottomConsoleOpen\\\" (onCollapse)=\\\"isBottomConsoleOpen = $event\\\"></bottom-console> <!-- Modal View controlled by ModalService --> <modal-view> </modal-view>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AppGlobalsService, },\n{type: ProblemsService, },\n{type: JsonStoreService, },\n{type: JsonUtilService, },\n{type: JsonSchemaService, },\n{type: KeysStoreService, },\n{type: RecordFixerService, },\n{type: SchemaFixerService, },\n{type: TabsUtilService, },\n{type: PathUtilService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input },],\n'record': [{ type: Input },],\n'schema': [{ type: Input },],\n'problemMap': [{ type: Input },],\n'jsonPatches': [{ type: Input },],\n'templates': [{ type: Input },],\n'recordChange': [{ type: Output },],\n'jsonPatchesChange': [{ type: Output },],\n'validationProblems': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}