{"version":3,"sources":["../../../staging/src/modal-view/modal-view.component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;;;;;;;;;;;AAEF,OAAO,EAAE,SAAA,EAAW,iBAAA,EAAmB,uBAAA,EAAyB,SAAA,EAAkB,MAAO,eAAA,CAAgB;AAGzG,OAAO,EAAE,2BAAA,EAA4B,MAAO,wBAAA,CAAyB;AACrE,OAAO,EAAE,YAAA,EAAa,MAAO,oBAAA,CAAqB;AAIlD;IAAwC,sCAA2B;IAKjE,8BAA8B;IAC9B,4BAAoB,YAA0B,EACpC,iBAAoC;QAD9C,YAEE,iBAAO,SACR;QAHmB,kBAAY,GAAZ,YAAY,CAAc;QACpC,uBAAiB,GAAjB,iBAAiB,CAAmB;;IAE9C,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,YAAY;aACd,QAAQ;aACR,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;aAC3B,SAAS,CAAC,UAAA,OAAO;YAChB,OAAO,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClD,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,YAAY;aACd,QAAQ;aACR,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;aAC3B,SAAS,CAAC,UAAA,OAAO;YAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAM,GAAN;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACxB,CAAC;IACH,CAAC;IAiBH,yBAAC;AAAD,CAhDA,AAgDC,CAhDuC,2BAA2B;;AAgC5D,6BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,YAAY;gBACtB,MAAM,EAAE,CAAC,EAAE,CAAC;gBACZ,QAAQ,EAAE,urBAAurB;gBACjsB,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,iCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,YAAY,GAAG;IACtB,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAH6F,CAG7F,CAAC;AACK,iCAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAE;CACjD,CAAC","file":"modal-view.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, ChangeDetectorRef, ChangeDetectionStrategy, ViewChild, OnInit } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { AbstractSubscriberComponent } from '../abstract-subscriber';\nimport { ModalService } from '../shared/services';\nimport { ModalOptions } from '../shared/interfaces';\n\n\nexport class ModalViewComponent extends AbstractSubscriberComponent implements OnInit {\n\n   modal: ModalDirective;\n  options: ModalOptions;\n\n  // TODO: unsubcribe on destroy\n  constructor(private modalService: ModalService,\n    private changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.modalService\n      .display$\n      .takeUntil(this.isDestroyed)\n      .subscribe(display => {\n        display ? this.modal.show() : this.modal.hide();\n      });\n    this.modalService\n      .options$\n      .takeUntil(this.isDestroyed)\n      .subscribe(options => {\n        this.options = options;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  onShow() {\n    if (this.options && this.options.onShow) {\n      this.options.onShow();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'modal-view',\n  styles: [\"\"],\n  template: \"<div class=\\\"modal fade\\\" (onShown)=\\\"onShow()\\\" bsModal #modal=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" [config]=\\\"{ backdrop: false }\\\"> <div class=\\\"modal-dialog modal-lg\\\"> <div *ngIf=\\\"options\\\" class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"modal.hide()\\\">&times;</button> <h4 class=\\\"modal-title\\\">{{options.title}}</h4> </div> <div class=\\\"modal-body\\\"> <div [innerHTML]=\\\"options.bodyHtml\\\"></div> <div [ngSwitch]=\\\"options.type\\\"> <div *ngSwitchCase=\\\"'confirm'\\\"> <button class=\\\"btn btn-success\\\" (click)=\\\"options.onConfirm();\\\"> <i class=\\\"fa fa-check\\\"></i> Confirm </button> </div> </div> </div> </div> </div> </div>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ModalService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'modal': [{ type: ViewChild, args: ['modal', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}