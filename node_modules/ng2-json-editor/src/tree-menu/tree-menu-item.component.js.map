{"version":3,"sources":["../../../staging/src/tree-menu/tree-menu-item.component.ts"],"names":[],"mappings":"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","file":"tree-menu-item.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Map, Set } from 'immutable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { DomUtilService, WindowHrefService, PathUtilService, AppGlobalsService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n\nexport class TreeMenuItemComponent implements OnInit, OnChanges {\n\n   label: string;\n   value: any;\n   schema: JSONSchema;\n   path: string;\n   depth: number;\n\n  // defined only if schmea.type equals to 'object'\n  keys: Set<string>;\n\n  isCollapsed = true;\n  href: string;\n\n  constructor(private windowHrefService: WindowHrefService,\n    private domUtilService: DomUtilService,\n    private pathUtilService: PathUtilService,\n    private appGlobalsService: AppGlobalsService) {\n  }\n\n  ngOnInit() {\n    this.href = `${this.windowHrefService.hrefWithoutHash}#${this.path}`;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['value'] && this.value && this.schema.type === 'object') {\n      this.keys = this.value.keySeq().toSet();\n    }\n  }\n\n  toggle(event: Event) {\n    // fix to trigger :focus css after focusAndSelectFirstInputChildById called.\n    event.preventDefault();\n\n    this.isCollapsed = !this.isCollapsed;\n    this.domUtilService.focusAndSelectFirstEditableChildById(this.path, true);\n  }\n\n  collapse() {\n    this.isCollapsed = true;\n  }\n\n  get isCollapsable(): boolean {\n    const schemaType = this.schema.type;\n    return this.isNotLeaf && (schemaType === 'object' || schemaType === 'array');\n  }\n\n  get maxDepth(): number {\n    return this.appGlobalsService.config.menuMaxDepth;\n  }\n\n  get isNotLeaf(): boolean {\n    return this.maxDepth === undefined || this.depth < this.maxDepth;\n  }\n\n  get adminMode$(): ReplaySubject<boolean> {\n    return this.appGlobalsService.adminMode$;\n  }\n\n  getChildPath(indexOrKey: number | string) {\n    return `${this.path}${this.pathUtilService.separator}${indexOrKey}`;\n  }\n\n  trackByElement(index: number, element: any): any {\n    return element;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tree-menu-item',\n  styles: [\"a { color: #e0dfdf; } \"],\n  template: \"<div> <a [href]=\\\"href\\\" (click)=\\\"toggle($event)\\\">{{label}}</a> <a *ngIf=\\\"isCollapsable\\\" [hidden]=\\\"isCollapsed\\\" (click)=\\\"collapse()\\\"> [x]</a> <div *ngIf=\\\"isNotLeaf\\\" [ngSwitch]=\\\"schema.type\\\" [hidden]=\\\"isCollapsed\\\"> <ul> <div *ngSwitchCase=\\\"'object'\\\"> <li *ngFor=\\\"let key of keys | filterHiddenFields:schema:(adminMode$ | async) | addAlwaysShowFields:schema | sortAlphabetically; trackBy:trackByElement\\\"> <tree-menu-item [label]=\\\"key\\\" [value]=\\\"value.get(key)\\\" [schema]=\\\"schema.properties[key]\\\" [path]=\\\"getChildPath(key)\\\" [depth]=\\\"depth + 1\\\"></tree-menu-item> </li> </div> <div *ngSwitchCase=\\\"'array'\\\"> <li *ngFor=\\\"let element of value; let i = index; trackBy:trackByElement\\\"> <tree-menu-item [label]=\\\"i\\\" [value]=\\\"element\\\" [schema]=\\\"schema.items\\\" [path]=\\\"getChildPath(i)\\\" [depth]=\\\"depth + 1\\\"></tree-menu-item> </li> </div> </ul> </div> </div>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WindowHrefService, },\n{type: DomUtilService, },\n{type: PathUtilService, },\n{type: AppGlobalsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n'value': [{ type: Input },],\n'schema': [{ type: Input },],\n'path': [{ type: Input },],\n'depth': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}