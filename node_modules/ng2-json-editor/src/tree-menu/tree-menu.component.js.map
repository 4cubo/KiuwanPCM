{"version":3,"sources":["../../../staging/src/tree-menu/tree-menu.component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;AAEF,OAAO,EACL,SAAS,EACT,KAAK,EAIL,uBAAuB,EAExB,MAAM,eAAA,CAAgB;AAIvB,OAAO,EAAE,cAAA,EAAgB,eAAA,EAAiB,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAIxF;IASE,2BAAoB,cAA8B,EACxC,eAAgC,EAChC,iBAAoC;QAF1B,mBAAc,GAAd,cAAc,CAAgB;QACxC,oBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAJtC,iBAAY,GAAG,EAAE,CAAC;IAK1B,CAAC;IAED,uCAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,wCAAY,GAAZ,UAAa,GAAW;QACtB,MAAM,CAAC,KAAG,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,GAAK,CAAC;IACnD,CAAC;IAED,0CAAc,GAAd,UAAe,KAAa,EAAE,OAAY;QACxC,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAED,sBAAI,yCAAU;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;QAC3C,CAAC;;;OAAA;IAmBH,wBAAC;AAAD,CAjDA,AAiDC;;AAlBM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,WAAW;gBACrB,MAAM,EAAE,CAAC,gPAAgP,CAAC;gBAC1P,QAAQ,EAAE,mZAAmZ;gBAC7Z,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,cAAc,GAAG;IACxB,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAJ6F,CAI7F,CAAC;AACK,gCAAc,GAA2C;IAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC3B,CAAC","file":"tree-menu.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Map, Set } from 'immutable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { DomUtilService, PathUtilService, AppGlobalsService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n\nexport class TreeMenuComponent implements OnChanges {\n\n   record: Map<string, any>;\n   schema: JSONSchema;\n\n  keys: Set<string>;\n\n  private prefixOrPath = '';\n\n  constructor(private domUtilService: DomUtilService,\n    private pathUtilService: PathUtilService,\n    private appGlobalsService: AppGlobalsService) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['record']) {\n      this.keys = this.record.keySeq().toSet();\n    }\n  }\n\n  getChildPath(key: string) {\n    return `${this.pathUtilService.separator}${key}`;\n  }\n\n  trackByElement(index: number, element: any): any {\n    return element;\n  }\n\n  get adminMode$(): ReplaySubject<boolean> {\n    return this.appGlobalsService.adminMode$;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tree-menu',\n  styles: [\"div.tree-menu-container { padding: 8px 2px 0 0; overflow-y: auto; text-align: center; } ul.menu-item-container { list-style: none; text-align: left; padding-top: 8px; padding-left: 0px; } ul.menu-item-container li { margin-bottom: 2px; } \"],\n  template: \"<div class=\\\"tree-menu-container\\\"> <ul class=\\\"menu-item-container\\\"> <li *ngFor=\\\"let key of keys | filterHiddenFields:schema:(adminMode$ | async) | addAlwaysShowFields:schema | sortAlphabetically; trackBy:trackByElement\\\"> <tree-menu-item [label]=\\\"key\\\" [value]=\\\"record.get(key)\\\" [schema]=\\\"schema.properties[key]\\\" [path]=\\\"getChildPath(key)\\\" [depth]=\\\"1\\\"></tree-menu-item> </li> </ul> </div>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomUtilService, },\n{type: PathUtilService, },\n{type: AppGlobalsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'record': [{ type: Input },],\n'schema': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}