{"version":3,"sources":["../../../../staging/src/bottom-console/problems-console-tab/problems-console-tab.component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;GAoBG;;;;;;;;;;;AAEH,OAAO,EACL,SAAS,EACT,uBAAuB,EACvB,KAAK,EAEL,iBAAiB,EAClB,MAAM,eAAA,CAAgB;AAGvB,OAAO,EAAE,2BAAA,EAA4B,MAAO,2BAAA,CAA4B;AACxE,OAAO,EAAE,cAAA,EAAgB,eAAA,EAAiB,eAAA,EAAgB,MAAO,uBAAA,CAAwB;AAIzF;IAAiD,+CAA2B;IAS1E,qCAAmB,cAA8B,EACxC,eAAgC,EAChC,eAAgC,EAChC,iBAAoC;QAH7C,YAIE,iBAAO,SACR;QALkB,oBAAc,GAAd,cAAc,CAAgB;QACxC,qBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAe,GAAf,eAAe,CAAiB;QAChC,uBAAiB,GAAjB,iBAAiB,CAAmB;QAN7C,kBAAY,GAAG,CAAC,CAAC;;IAQjB,CAAC;IAED,8CAAQ,GAAR;QAAA,iBA0BC;QAzBC,IAAI,CAAC,eAAe,CAAC,4BAA4B;aAC9C,GAAG,CAAC,UAAA,qBAAqB,IAAI,OAAA,qBAAqB,CAAC,KAAI,CAAC,WAAW,CAAC,EAAvC,CAAuC,CAAC;aACrE,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;aAC3B,SAAS,CAAC,UAAA,UAAU;YACnB,KAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;YACrC,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QACxC,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,eAAe,CAAC,4BAA4B;aAC9C,GAAG,CAAC,UAAA,qBAAqB,IAAI,OAAA,qBAAqB,CAAC,KAAI,CAAC,WAAW,CAAC,EAAvC,CAAuC,CAAC;aACrE,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;aAC3B,SAAS,CAAC,UAAA,UAAU;YACnB,KAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;YACrC,KAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QACxC,CAAC,CAAC,CAAC;QAEL,4EAA4E;QAE5E,IAAM,aAAa,GAAG,IAAI,CAAC,WAAW,KAAK,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;QAC5H,aAAa;aACV,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;aAC3B,SAAS,CAAC,UAAA,YAAY;YACrB,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACnC,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,KAAK,QAAQ,GAAG,aAAa,GAAG,4BAA4B,CAAC;IACpG,CAAC;IAED,wDAAkB,GAAlB,UAAmB,IAAY;QAC7B,IAAI,CAAC,cAAc,CAAC,oCAAoC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACvE,CAAC;IAoBH,kCAAC;AAAD,CAlEA,AAkEC,CAlEgD,2BAA2B;;AA+CrE,sCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,sBAAsB;gBAChC,MAAM,EAAE,CAAC,0IAA0I;oBACrJ,6EAA6E,CAAC;gBAC5E,QAAQ,EAAE,+rBAA+rB;gBACzsB,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,0CAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,cAAc,GAAG;IACxB,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAL6F,CAK7F,CAAC;AACK,0CAAc,GAA2C;IAChE,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAChC,CAAC","file":"problems-console-tab.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnInit,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { AbstractSubscriberComponent } from '../../abstract-subscriber';\nimport { DomUtilService, PathUtilService, ProblemsService } from '../../shared/services';\nimport { SchemaValidationProblems, ProblemCollectionType } from '../../shared/interfaces';\n\n\nexport class ProblemsConsoleTabComponent extends AbstractSubscriberComponent implements OnInit {\n\n   problemType: ProblemCollectionType;\n\n  internalProblemMap: SchemaValidationProblems;\n  externalProblemMap: SchemaValidationProblems;\n  problemCount = 0;\n  iconClassName: string;\n\n  constructor(public domUtilService: DomUtilService,\n    public pathUtilService: PathUtilService,\n    public problemsService: ProblemsService,\n    public changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.problemsService.externalCategorizedProblems$\n      .map(categorizedProblemMap => categorizedProblemMap[this.problemType])\n      .takeUntil(this.isDestroyed)\n      .subscribe(problemMap => {\n        this.externalProblemMap = problemMap;\n        this.changeDetectorRef.markForCheck();\n      });\n    this.problemsService.internalCategorizedProblems$\n      .map(categorizedProblemMap => categorizedProblemMap[this.problemType])\n      .takeUntil(this.isDestroyed)\n      .subscribe(problemMap => {\n        this.internalProblemMap = problemMap;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    // TODO: create WarningsConsoleTabComponent with same template to avoid `if`\n\n    const problemCount$ = this.problemType === 'errors' ? this.problemsService.errorCount$ : this.problemsService.warningCount$;\n    problemCount$\n      .takeUntil(this.isDestroyed)\n      .subscribe(problemCount => {\n        this.problemCount = problemCount;\n      });\n\n    this.iconClassName = this.problemType === 'errors' ? 'fa fa-times' : 'fa fa-exclamation-triangle';\n  }\n\n  focusAndSelectPath(path: string) {\n    this.domUtilService.focusAndSelectFirstEditableChildById(path, true);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'problems-console-tab',\n  styles: [\".list-group-item { cursor: pointer; color: #0074D9; } .list-group-item:hover { background-color: #faebcc; text-decoration: underline; } \",\n\".fa-exclamation-triangle { color: #f1c40f; } .fa-times { color: #D14024; } \"],\n  template: \"<ng-template tabHeading> <i [ngClass]=\\\"iconClassName\\\"></i> {{problemType | titlecase}} <span class=\\\"badge\\\">{{problemCount}}</span> </ng-template> <ul class=\\\"list-group\\\"> <ng-container *ngFor=\\\"let key of internalProblemMap | keys\\\"> <li *ngFor=\\\"let problem of internalProblemMap[key]\\\" class=\\\"list-group-item\\\" (click)=\\\"focusAndSelectPath(key)\\\"> <i [ngClass]=\\\"iconClassName\\\"></i> {{ problem.message }} </li> </ng-container> <ng-container *ngFor=\\\"let key of externalProblemMap | keys\\\"> <li *ngFor=\\\"let problem of externalProblemMap[key]\\\" class=\\\"list-group-item\\\" (click)=\\\"focusAndSelectPath(key)\\\"> <i [ngClass]=\\\"iconClassName\\\"></i> {{ problem.message }} </li> </ng-container> </ul>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomUtilService, },\n{type: PathUtilService, },\n{type: ProblemsService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'problemType': [{ type: Input },],\n};\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}