{"version":3,"sources":["../../../staging/src/add-field-dropdown/add-field-dropdown.component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;AAEF,OAAO,EAAE,SAAA,EAAW,KAAA,EAA6B,UAAA,EAAsC,uBAAA,EAAwB,MAAO,eAAA,CAAgB;AAGtI,OAAO,EAAE,cAAA,EAAgB,gBAAA,EAAiB,MAAO,oBAAA,CAAqB;AAItE;IAUE,mCAAoB,UAAsB,EAChC,cAA8B,EAC9B,gBAAkC;QAFxB,eAAU,GAAV,UAAU,CAAY;QAChC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAL5C,eAAU,GAAG,EAAE,CAAC;QAChB,WAAM,GAAG,KAAK,CAAC;IAIiC,CAAC;IAEjD,+CAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAChF,CAAC;IACH,CAAC;IAED,mDAAe,GAAf;QAAA,iBAGC;QAFC,UAAU,CAAC;YACT,OAAA,KAAI,CAAC,cAAc,CAAC,6BAA6B,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAAhF,CAAgF,CAAC,CAAC;IACtF,CAAC;IAED,iDAAa,GAAb,UAAc,KAAa;QACzB,IAAM,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7F,IAAI,CAAC,cAAc,CAAC,oCAAoC,CAAC,kBAAkB,CAAC,CAAC;QAC7E,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAsBH,gCAAC;AAAD,CAnDA,AAmDC;;AApBM,oCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,oBAAoB;gBAC9B,MAAM,EAAE,CAAC,oYAAoY,CAAC;gBAC9Y,QAAQ,EAAE,qtBAAqtB;gBAC/tB,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,wCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,cAAc,GAAG;IACxB,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,EAJ6F,CAI7F,CAAC;AACK,wCAAc,GAA2C;IAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC/B,CAAC","file":"add-field-dropdown.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, Output, EventEmitter, ElementRef, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { Set } from 'immutable';\n\nimport { DomUtilService, KeysStoreService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n\nexport class AddFieldDropdownComponent implements OnChanges {\n\n   schema: JSONSchema;\n   fields: Set<string>;\n   pathString: string;\n   isDisabled: boolean;\n\n  expression = '';\n  hidden = false;\n\n  constructor(private elementRef: ElementRef,\n    private domUtilService: DomUtilService,\n    private keysStoreService: KeysStoreService) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['schema'] || changes['fields']) {\n      this.hidden = Object.keys(this.schema.properties).length === this.fields.size;\n    }\n  }\n\n  onDropdownShown() {\n    setTimeout(() =>\n      this.domUtilService.focusFirstInputChildByElement(this.elementRef.nativeElement));\n  }\n\n  onFieldSelect(field: string) {\n    const newFieldPathString = this.keysStoreService.addKey(this.pathString, field, this.schema);\n    this.domUtilService.focusAndSelectFirstEditableChildById(newFieldPathString);\n    this.expression = '';\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'add-field-dropdown',\n  styles: [\".btn-add-field-dropdown { padding: 0 3px; font-size: 11px; opacity: 0.4; border: 0; background: transparent; font-weight: bold; line-height: 1; text-shadow: 0 1px 0 #fff; color: darkslategray; margin-bottom: 2px; float: left; } .btn-add-field-dropdown:hover { color: blue; opacity: 0.6; } .dropdown-filter-container { padding: 0 3px; } .dropdown-filter-container input { width: 100%; } \"],\n  template: \"<div *ngIf=\\\"!hidden\\\" class=\\\"btn-group add-field-dropdown-container\\\" dropdown keyboardNav=\\\"true\\\" [isDisabled]=\\\"isDisabled\\\" (onShown)=\\\"onDropdownShown()\\\"> <button type=\\\"button\\\" class=\\\"btn btn-add-field-dropdown\\\" dropdownToggle> <ng-content></ng-content>  </button> <ul class=\\\"dropdown-menu\\\" *dropdownMenu> <li class=\\\"dropdown-filter-container\\\"> <input [(ngModel)]=\\\"expression\\\" placeholder=\\\"filter\\\" (click)=\\\"$event.stopPropagation()\\\"> </li> <li class=\\\"divider dropdown-divider\\\"></li> <li *ngFor=\\\"let key of schema.properties | differentKeys:fields | filterByExpression:expression\\\"> <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onFieldSelect(key)\\\">{{key}}</a> </li> </ul> </div>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: DomUtilService, },\n{type: KeysStoreService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'schema': [{ type: Input },],\n'fields': [{ type: Input },],\n'pathString': [{ type: Input },],\n'isDisabled': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}