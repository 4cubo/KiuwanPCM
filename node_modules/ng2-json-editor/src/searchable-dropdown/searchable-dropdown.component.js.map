{"version":3,"sources":["../../../staging/src/searchable-dropdown/searchable-dropdown.component.ts"],"names":[],"mappings":"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","file":"searchable-dropdown.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\n\nimport { BiDirectionalMap } from 'bi-directional-map/dist';\n\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\n\n\nexport class SearchableDropdownComponent implements OnChanges {\n\n   items: Array<string>;\n   shortcutMap: { [key: string]: string };\n   displayValueMap: { [key: string]: string };\n   value: string;\n   pathString: string;\n   tabIndex: number;\n   placeholder: string;\n  expression: string;\n  biDisplayValueMap: BiDirectionalMap<string, string>;\n  displayValues: Array<string>;\n\n   onSelect = new EventEmitter<string>();\n   onBlur = new EventEmitter<void>();\n\n   filterInputElRef: ElementRef;\n   dropdown: BsDropdownDirective;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['value']) {\n      this.placeholder = this.value || this.placeholder || '';\n    }\n\n    if (changes['displayValueMap'] || changes['items']) {\n      this.displayValueMap = this.displayValueMap || Object.create(null);\n      this.biDisplayValueMap = new BiDirectionalMap<string, string>(this.displayValueMap);\n      // set original value as display value for not configured items.\n      this.items\n        .filter(item => !this.displayValueMap[item])\n        .forEach(item => {\n          this.biDisplayValueMap.set(item, item);\n        });\n\n      this.displayValues = Array.from(this.biDisplayValueMap.values());\n    }\n  }\n\n  onItemClick(displayValue: string) {\n    const originalValue = this.biDisplayValueMap.getKey(displayValue);\n    this.onSelect.emit(originalValue);\n\n    // only necessary to force closing when selected is item equals to value\n    // in which case dropdown doesn't close automatically for some reason\n    this.dropdown.hide();\n  }\n\n  onEnterKeyUp() {\n    if (this.shortcutMap && this.shortcutMap[this.expression]) {\n      this.onItemClick(this.shortcutMap[this.expression]);\n    }\n    this.dropdown.hide();\n  }\n\n  showDropdown() {\n    this.dropdown.show();\n    this.expression = '';\n    setTimeout(() => {\n      (this.filterInputElRef.nativeElement as HTMLInputElement).focus();\n    });\n  }\n\n  onInputBlur(event: FocusEvent) {\n    // this avoids closing dropdown when an item is selected\n    // so that onItemClick() can be executed properly before closing.\n    const relatedTarget = event.relatedTarget as HTMLElement;\n    if (!relatedTarget || relatedTarget.className !== 'dropdown-item') {\n      this.dropdown.hide();\n    }\n    this.onBlur.emit();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'searchable-dropdown',\n  styles: [\"div.btn-group { width: 100%; } .dropdown-menu { left: 0px !important; } .toggle-container { width: 100%; display: inline-flex; } .toggle-container .value { flex-grow: 1; } .dropdown-toggle { box-shadow: none !important; } \"],\n  template: \"<div class=\\\"btn-group\\\" #dropdown=\\\"bs-dropdown\\\" dropdown keyboardNav=\\\"true\\\"> <!-- there is no dropdownToggle since it is handled manually see: onInputFocus and onInputBlur in ts --> <div class=\\\"toggle-container\\\"> <input *ngIf=\\\"dropdown.isOpen; else valueDisplayTemplate\\\" #filterInput class=\\\"value\\\" attr.data-path=\\\"{{pathString}}\\\" [placeholder]=\\\"placeholder\\\" [(ngModel)]=\\\"expression\\\" (keyup.enter)=\\\"onEnterKeyUp()\\\" (blur)=\\\"onInputBlur($event)\\\"> <i class=\\\"fa fa-caret-down\\\" (click)=\\\"showDropdown()\\\"></i> </div> <ul class=\\\"dropdown-menu\\\" *dropdownMenu role=\\\"menu\\\"> <li *ngFor=\\\"let displayValue of displayValues | filterByExpression:expression\\\" role=\\\"menuitem\\\"> <!-- href is needed for keyboard navigation --> <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"onItemClick(displayValue)\\\">{{displayValue}}</a> </li> </ul> </div> <ng-template #valueDisplayTemplate> <span class=\\\"value\\\" [tabindex]=\\\"tabIndex\\\" (focus)=\\\"showDropdown()\\\">{{biDisplayValueMap.getValue(value)}}</span> </ng-template>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'shortcutMap': [{ type: Input },],\n'displayValueMap': [{ type: Input },],\n'value': [{ type: Input },],\n'pathString': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'onSelect': [{ type: Output },],\n'onBlur': [{ type: Output },],\n'filterInputElRef': [{ type: ViewChild, args: ['filterInput', ] },],\n'dropdown': [{ type: ViewChild, args: ['dropdown', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}