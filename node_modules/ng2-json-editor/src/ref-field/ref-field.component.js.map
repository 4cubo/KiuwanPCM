{"version":3,"sources":["../../../staging/src/ref-field/ref-field.component.ts"],"names":[],"mappings":"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","file":"ref-field.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { AppGlobalsService, PathUtilService } from '../shared/services';\nimport { RefConfig, JSONSchema, RefAnchorAttributes } from '../shared/interfaces';\n\n\nexport class RefFieldComponent implements OnChanges {\n\n   schema: JSONSchema;\n   value: Map<string, string>;\n   path: Array<any>;\n\n  pathString: string;\n  refData: object;\n  requestOptions: RequestOptions;\n\n  isPreviewButtonHidden = false;\n\n  private anchorAttributes: RefAnchorAttributes;\n\n  constructor(private http: Http,\n    private changeDetectorRef: ChangeDetectorRef,\n    private appGlobalsService: AppGlobalsService,\n    private pathUtilService: PathUtilService) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.refConfig) {\n      const valueChange = changes['value'];\n      const schemaChange = changes['schema'];\n\n      if (valueChange && this.refConfig && this.refConfig.anchorBuilder && this.ref) {\n        this.anchorAttributes = this.refConfig.anchorBuilder(this.ref);\n      }\n\n      // instead of ngOnInit because requestOptions has to be set before fetching\n      if (schemaChange && schemaChange.isFirstChange()) {\n        this.requestOptions = this.createRequestOptionsWithConfig();\n      }\n\n      if (valueChange && this.isTemplateEnabled) {\n        if (this.refConfig.lazy) {\n          this.isPreviewButtonHidden = false;\n        } else {\n          this.fetchRef();\n        }\n      }\n    }\n\n    if (changes['path']) {\n      this.pathString = this.pathUtilService.toPathString(this.path);\n    }\n  }\n\n  onPreviewClick() {\n    this.isPreviewButtonHidden = true;\n    this.fetchRef();\n  }\n\n  get customTemplate(): TemplateRef<any> {\n    return this.appGlobalsService.templates[this.refConfig.templateName];\n  }\n\n  get refConfig(): RefConfig {\n    return this.schema.refFieldConfig;\n  }\n\n  get ref(): string {\n    return this.value.get('$ref');\n  }\n\n  get anchorHref(): string {\n    return this.anchorAttributes ? this.anchorAttributes.href : this.ref;\n  }\n\n  get anchorDisplay(): string {\n    return this.anchorAttributes ? this.anchorAttributes.display : this.ref;\n  }\n\n  get isTemplateEnabled(): boolean {\n    return this.refConfig !== undefined && this.refConfig.templateName !== undefined;\n  }\n\n  get shouldDisplayTemplate(): boolean {\n    return this.isPreviewButtonHidden || !this.refConfig.lazy;\n  }\n\n  private fetchRef() {\n    this.refData = undefined;\n    this.http\n      .get(this.ref, this.requestOptions)\n      .map(res => res.json())\n      .catch(error => {\n        return Observable.of({ $error: error });\n      }).subscribe(data => {\n        this.refData = data;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  private createRequestOptionsWithConfig(): RequestOptions {\n    const headers = new Headers();\n    if (this.refConfig.headers) {\n      this.refConfig.headers\n        .forEach(header => headers.append(header.name, header.value));\n    }\n    return new RequestOptions({ headers });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ref-field',\n  styles: [\"button.btn-preview-template { background: transparent; border: 0; width: 100%; height: 100%; } .align-center { width: 100%; text-align: center; } .break-word { word-break: break-word; } \"],\n  template: \"<div [id]=\\\"pathString\\\"> <div *ngIf=\\\"ref\\\"> <div *ngIf=\\\"isTemplateEnabled\\\"> <button class=\\\"btn-preview-template\\\" *ngIf=\\\"!shouldDisplayTemplate\\\" (click)=\\\"onPreviewClick($event)\\\"><i class=\\\"fa fa-eye\\\"></i></button> <div *ngIf=\\\"shouldDisplayTemplate\\\"> <ng-template *ngIf=\\\"refData\\\" [ngTemplateOutlet]=\\\"customTemplate\\\" [ngTemplateOutletContext]=\\\"{response: refData}\\\"></ng-template> <i *ngIf=\\\"!refData\\\" class=\\\"fa fa-spinner fa-spin align-center\\\"></i> </div> </div> <div *ngIf=\\\"!isTemplateEnabled\\\"> <a target=\\\"_blank\\\" class=\\\"break-word\\\" [href]=\\\"anchorHref\\\">{{anchorDisplay}}</a> </div> </div> </div>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n{type: ChangeDetectorRef, },\n{type: AppGlobalsService, },\n{type: PathUtilService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'schema': [{ type: Input },],\n'value': [{ type: Input },],\n'path': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}