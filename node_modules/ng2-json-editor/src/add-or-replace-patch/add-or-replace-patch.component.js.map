{"version":3,"sources":["../../../staging/src/add-or-replace-patch/add-or-replace-patch.component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;AAEF,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,uBAAA,EAAwB,MAAO,eAAA,CAAgB;AAK1E;IAAA;IAqBA,CAAC;IAjBC,sBAAI,uDAAe;aAAnB;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK,GAAG,mBAAmB,GAAG,oBAAoB,CAAC;QAC9E,CAAC;;;OAAA;IAeH,iCAAC;AAAD,CArBA,AAqBC;;AAdM,qCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,sBAAsB;gBAChC,MAAM,EAAE,CAAC,8OAA8O,CAAC;gBACxP,QAAQ,EAAE,klDAAklD;gBAC5lD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,yCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,yCAAc,GAA2C;IAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC1B,CAAC","file":"add-or-replace-patch.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { JsonPatch } from '../shared/interfaces';\n\n\nexport class AddOrReplacePatchComponent {\n\n   patch: JsonPatch;\n\n  get leftBorderClass(): string {\n    return this.patch.op === 'add' ? 'green-left-border' : 'orange-left-border';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'add-or-replace-patch',\n  styles: [\"td { vertical-align: top; padding-right: 10px !important; } .align-self-end { align-self: flex-end; } .patch-container { display: flex; padding-left: 4px; } .green-left-border { border-left: 9px solid #2ecc71; } .grow { flex-grow: 1; } \"],\n  template: \"<div class=\\\"patch-container\\\" [ngClass]=\\\"leftBorderClass\\\" [id]=\\\"patch.path\\\" tabindex=\\\"-1\\\"> <div class=\\\"grow\\\"> <ng-template [ngTemplateOutlet]=\\\"anyTypeTemplate\\\" [ngTemplateOutletContext]=\\\"{value: patch.value}\\\"></ng-template> </div> <patch-actions class=\\\"align-self-end\\\" [patch]=\\\"patch\\\"></patch-actions> </div> <ng-template #anyTypeTemplate let-value=\\\"value\\\"> <ng-container [ngSwitch]=\\\"value | typeOf\\\"> <ng-container *ngSwitchCase=\\\"'object'\\\"> <ng-template [ngTemplateOutlet]=\\\"objectTemplate\\\" [ngTemplateOutletContext]=\\\"{object: value}\\\"></ng-template> </ng-container> <ng-container *ngSwitchCase=\\\"'array'\\\"> <ng-template [ngTemplateOutlet]=\\\"arrayTemplate\\\" [ngTemplateOutletContext]=\\\"{array: value}\\\"></ng-template> </ng-container> <ng-container *ngSwitchDefault> <ng-template [ngTemplateOutlet]=\\\"primitiveTemplate\\\" [ngTemplateOutletContext]=\\\"{primitive: value}\\\"></ng-template> </ng-container> </ng-container> </ng-template> <ng-template #objectTemplate let-object=\\\"object\\\"> <table> <tr *ngFor=\\\"let key of object | keys\\\"> <td> <label>{{key}}</label> </td> <td> <ng-template [ngTemplateOutlet]=\\\"anyTypeTemplate\\\" [ngTemplateOutletContext]=\\\"{value: object[key]}\\\"></ng-template> </td> </tr> </table> </ng-template> <ng-template #arrayTemplate let-array=\\\"array\\\"> <table> <tr *ngFor=\\\"let item of array\\\" class=\\\"array-item\\\"> <td> <ng-template [ngTemplateOutlet]=\\\"anyTypeTemplate\\\" [ngTemplateOutletContext]=\\\"{value: item}\\\"></ng-template> </td> </tr> </table> </ng-template> <ng-template #primitiveTemplate let-primitive=\\\"primitive\\\"> <span>{{primitive}}</span> </ng-template>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'patch': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}