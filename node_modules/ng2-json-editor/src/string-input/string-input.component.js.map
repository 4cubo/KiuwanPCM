{"version":3,"sources":["../../../staging/src/string-input/string-input.component.ts"],"names":[],"mappings":"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","file":"string-input.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ViewChild,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\nimport { DomUtilService, KatexService } from '../shared/services';\n\n\nexport class StringInputComponent implements AfterViewInit, OnInit, OnChanges {\n   latexPreviewEl: ElementRef;\n\n  // value update triggers re-rendering of latex preview if it's enabled\n   value: string;\n   disabled: boolean;\n   pathString: string;\n   placeholder: string;\n   tabIndex: number;\n   latexPreviewEnabled: boolean;\n\n   blur = new EventEmitter<void>();\n   onKeypress = new EventEmitter<void>();\n   valueChange = new EventEmitter<string>();\n\n  latexPreviewShown: boolean;\n  // updated as typed in contenteditable div, doesn't trigger latex re-rendering.\n  contentModel: string;\n\n  constructor(public domUtilService: DomUtilService, public katexService: KatexService) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const valueChange = changes['value'];\n    if (valueChange) {\n      this.contentModel = this.value;\n      if (this.latexPreviewEnabled && !valueChange.firstChange) {\n        this.renderLatex();\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (this.shouldShowLatexPreview) {\n      this.latexPreviewShown = true;\n    }\n  }\n\n  ngAfterViewInit() {\n    // render latex preview on init, if it's enabled and value is not empty\n    if (this.shouldShowLatexPreview) {\n      this.renderLatex();\n    }\n  }\n\n  onBlur() {\n    if (this.shouldShowLatexPreview) {\n      this.latexPreviewShown = true;\n      this.value = this.contentModel;\n    }\n    this.blur.emit();\n  }\n\n  renderLatex() {\n    this.katexService.renderMathInText(this.value, this.latexPreviewEl.nativeElement);\n  }\n\n  hideLatexPreview(contentEditableDiv: HTMLElement) {\n    this.latexPreviewShown = false;\n    setTimeout(() => contentEditableDiv.focus());\n  }\n\n  contentModelChange(value: string) {\n    this.contentModel = value;\n    this.valueChange.emit(value);\n  }\n\n  get shouldShowLatexPreview(): boolean {\n    return this.latexPreviewEnabled && Boolean(this.value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'string-input',\n  styles: [\"\"],\n  template: \"<div [class.hidden]=\\\"latexPreviewShown\\\" [attr.contenteditable]=\\\"!disabled\\\" [attr.data-path]=\\\"pathString\\\" [tabindex]=\\\"tabIndex\\\" [contentModel]=\\\"contentModel\\\" (contentModelChange)=\\\"contentModelChange($event)\\\" (blur)=\\\"onBlur()\\\" (keypress)=\\\"onKeypress.emit($event)\\\" attr.placeholder=\\\"{{placeholder || '⁣\\u2063'}}\\\" #contentEditable></div> <div [class.hidden]=\\\"!latexPreviewEnabled || !latexPreviewShown\\\" (click)=\\\"hideLatexPreview(contentEditable)\\\" (blur)=\\\"hideLatexPreview(contentEditable)\\\" #latexPreview></div>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomUtilService, },\n{type: KatexService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'latexPreviewEl': [{ type: ViewChild, args: ['latexPreview', ] },],\n'value': [{ type: Input },],\n'disabled': [{ type: Input },],\n'pathString': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n'latexPreviewEnabled': [{ type: Input },],\n'blur': [{ type: Output },],\n'onKeypress': [{ type: Output },],\n'valueChange': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}