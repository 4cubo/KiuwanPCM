{"version":3,"sources":["../../../staging/src/abstract-field/abstract-field.component.ts"],"names":[],"mappings":"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","file":"abstract-field.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { OnInit, OnDestroy, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { AbstractSubscriberComponent } from '../abstract-subscriber';\nimport { AppGlobalsService, PathUtilService, JsonStoreService, ProblemsService } from '../shared/services';\nimport { ValidationProblem, PathCache, JSONSchema, JsonPatch, JsonPatchesByOp } from '../shared/interfaces';\n\n/**\n * This is the base class for fields\n * WARNING:\n *  XFieldComponent which extends this class should have all services in this constructor, in their constructor!\n *  EX: constructor(...public appGlobalService: AppGlobalService, ...) {...}\n *\n * It provides trackByFunction from AbstractTrackerComponent, and handles errors for the component.\n */\nexport abstract class AbstractFieldComponent extends AbstractSubscriberComponent implements OnInit, OnDestroy, OnChanges {\n\n  // @Input\n  path: Array<any>;\n\n  pathString: string;\n  pathCache: PathCache = {};\n  externalErrors: Array<ValidationProblem> = [];\n  schema: JSONSchema;\n\n  // patches grouped by op because they different UI representation\n  replaceJsonPatches: Array<JsonPatch> = [];\n  addJsonPatches: Array<JsonPatch> = [];\n  removeJsonPatch: JsonPatch;\n\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public pathUtilService: PathUtilService,\n    public changeDetectorRef: ChangeDetectorRef,\n    public jsonStoreService: JsonStoreService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.problemsService.externalCategorizedProblems$\n      .takeUntil(this.isDestroyed)\n      .subscribe(externalCategorizedProblemMap => {\n        this.externalErrors = externalCategorizedProblemMap.errors[this.pathString] || [];\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.jsonStoreService.patchesByPath$\n      .map(patchesByPath => patchesByPath[this.pathString])\n      .map(patches => this.groupJsonPatchesByOp(patches))\n      .takeUntil(this.isDestroyed)\n      .subscribe(patchesByOp => {\n        this.removeJsonPatch = patchesByOp.remove[0];\n        this.addJsonPatches = patchesByOp.add;\n        this.replaceJsonPatches = patchesByOp.replace;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  private groupJsonPatchesByOp(patches: Array<JsonPatch>): JsonPatchesByOp {\n    const group: JsonPatchesByOp = {\n      add: [],\n      remove: [],\n      replace: []\n    };\n\n    if (patches) {\n      patches.forEach((patch) => {\n        const opPatches = group[patch.op];\n        opPatches.push(patch);\n      });\n    }\n\n    return group;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['path']) {\n      this.pathString = this.pathUtilService.toPathString(this.path);\n    }\n  }\n\n  /**\n   * Gets path for child, returns from `pathCache` if it is a hit\n   * in order not to re-render child component due to reference change its path.\n   *\n   * @param key - index or field name for child\n   */\n  getPathForChild(key: any): Array<any> {\n    if (!this.pathCache[key] || this.pathCache[key][this.path.length - 1] !== this.path[this.path.length - 1]) {\n      this.pathCache[key] = this.path.concat(key);\n    }\n    return this.pathCache[key];\n  }\n\n  hasErrors(): boolean {\n    return this.externalErrors.length > 0;\n  }\n\n  get disabled() {\n    return this.schema.disabled && !this.appGlobalsService.adminMode;\n  }\n\n  get redLeftBorderClass(): string {\n    return this.removeJsonPatch ? 'red-left-border' : '';\n  }\n\n  trackByElement(index: number, element: any): any {\n    return element;\n  }\n\n  trackByIndex(index: number, element: any): number {\n    return index;\n  }\n\n}\n"]}