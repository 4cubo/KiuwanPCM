{"version":3,"sources":["../../../staging/src/add-new-element-button/add-new-element-button.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,uBAAA,EAAwB,MAAO,eAAA,CAAgB;AAI1E,OAAO,EAAE,cAAA,EAAgB,iBAAA,EAAmB,gBAAA,EAAkB,eAAA,EAAiB,gBAAA,EAAiB,MAAO,oBAAA,CAAqB;AAI5H;IAKE,sCAAmB,cAA8B,EACxC,iBAAoC,EACpC,gBAAkC,EAClC,eAAgC,EAChC,eAAiC;QAJvB,mBAAc,GAAd,cAAc,CAAgB;QACxC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAkB;IAAI,CAAC;IAE/C,oDAAa,GAAb;QAAA,iBAYC;QAXC,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QACrC,IAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QACzE,IAAM,MAAM,GAAc,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,IAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;QAC7C,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QACpD,iCAAiC;QACjC,IAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QACvE,UAAU,CAAC;YACT,KAAI,CAAC,cAAc,CAAC,oCAAoC,CAAC,gBAAgB,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;IACL,CAAC;IAsBH,mCAAC;AAAD,CA7CA,AA6CC;;AApBM,uCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,wBAAwB;gBAClC,MAAM,EAAE,CAAC,2SAA2S,CAAC;gBACrT,QAAQ,EAAE,4KAA4K;gBACtL,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,2CAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,cAAc,GAAG;IACxB,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,EAN6F,CAM7F,CAAC;AACK,2CAAc,GAA2C;IAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC3B,CAAC","file":"add-new-element-button.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { List } from 'immutable';\n\n\nimport { DomUtilService, EmptyValueService, JsonStoreService, PathUtilService, KeysStoreService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n\nexport class AddNewElementButtonComponent {\n\n   path: Array<any>;\n   schema: JSONSchema;\n\n  constructor(public domUtilService: DomUtilService,\n    public emptyValueService: EmptyValueService,\n    public jsonStoreService: JsonStoreService,\n    public pathUtilService: PathUtilService,\n    public keyStoreService: KeysStoreService) { }\n\n  addNewElement() {\n    const itemSchema = this.schema.items;\n    const emptyValue = this.emptyValueService.generateEmptyValue(itemSchema);\n    const values: List<any> = this.jsonStoreService.getIn(this.path);\n    const insertIndex = values ? values.size : 0;\n    const insertPath = this.path.concat(insertIndex);\n    this.jsonStoreService.addIn(insertPath, emptyValue);\n    // focus on the new added element\n    const insertPathString = this.pathUtilService.toPathString(insertPath);\n    setTimeout(() => {\n      this.domUtilService.focusAndSelectFirstEditableChildById(insertPathString);\n    });\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'add-new-element-button',\n  styles: [\"div.button-container { display: inline-block; width: 100%; } .btn-new-field { font-size: 13px; font-weight: bold; text-shadow: 0 1px 0 #fff; opacity: 0.5; background: transparent; border: 0; bottom: -5px; left: -5px; padding: 0px; } .btn-new-field:hover { color: green !important; opacity: 0.6; } \"],\n  template: \"<div [class.disabled]=\\\"schema.disabled\\\"  class=\\\"button-container\\\"> <button type=\\\"button\\\" class=\\\"btn-new-field\\\" (click)=\\\"addNewElement()\\\">Add new</button> </div>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomUtilService, },\n{type: EmptyValueService, },\n{type: JsonStoreService, },\n{type: PathUtilService, },\n{type: KeysStoreService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'path': [{ type: Input },],\n'schema': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}