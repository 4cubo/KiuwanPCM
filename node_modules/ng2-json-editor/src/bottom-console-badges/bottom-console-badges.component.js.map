{"version":3,"sources":["../../../staging/src/bottom-console-badges/bottom-console-badges.component.ts"],"names":[],"mappings":"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","file":"bottom-console-badges.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport { Component, Output, EventEmitter, OnInit, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\n\nimport { AbstractSubscriberComponent } from '../abstract-subscriber';\nimport { ProblemsService, JsonStoreService } from '../shared/services';\nimport { Subscription } from 'rxjs/Subscription';\n\n\nexport class BottomConsoleBadgesComponent extends AbstractSubscriberComponent implements OnInit, OnDestroy {\n\n   badgeClick = new EventEmitter<string>();\n\n  errorCount = 0;\n  warningCount = 0;\n  patchCount = 0;\n\n  constructor(private problemsService: ProblemsService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private jsonStoreService: JsonStoreService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.problemsService.errorCount$\n      .takeUntil(this.isDestroyed)\n      .subscribe(count => {\n        this.errorCount = count;\n        // FIXME: use markForCheck() instead\n        // markForCheck() wasn't working for mysterious reasons for initial update\n        this.changeDetectorRef.detectChanges();\n      });\n    this.problemsService.warningCount$\n      .takeUntil(this.isDestroyed)\n      .subscribe(count => {\n        this.warningCount = count;\n        // FIXME: use markForCheck() instead\n        // markForCheck() wasn't working for mysterious reasons for initial update\n        this.changeDetectorRef.detectChanges();\n      });\n    this.jsonStoreService.patchesByPath$\n      .map(patchesByPath => {\n        return Object.keys(patchesByPath)\n          .map(path => patchesByPath[path].length)\n          .reduce((sum, patchCountPerPath) => sum + patchCountPerPath, 0);\n      })\n      .takeUntil(this.isDestroyed)\n      .subscribe(patchCount => {\n        this.patchCount = patchCount;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  onBadgeClick(event: Event, badgeName: string) {\n    event.preventDefault();\n    this.badgeClick.emit(badgeName);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bottom-console-badges',\n  styles: [\".error span { border: 2px solid #d14024; } .error span i { color: #d14024; padding-bottom: 2px; } .warning span { border: 2px solid #fbd503; } .warning span i { color: #fbd503; } .patch span { border: 2px solid #f96509; } .patch span i { color: #f96509; } a { text-decoration: none; cursor: pointer; padding-top: 7px; } a i { transition: all 0.35s ease-in-out; } a i:hover { font-size: 1.10em; } .badges-container { display: flex; flex-direction: column; align-items: center; width: 100%; } .badges-container a { display: flex; width: 30px; margin-top: 5px; } .badges-container a:first-of-type { border-top: 2px solid #283948; margin-top: 10px; } .badges-container a span { display: flex; align-items: center; height: 30px; border-radius: 20%; } @media screen and (max-width: 1440px) { .badges-container { flex-direction: column; } } \"],\n  template: \"<div class=\\\"badges-container\\\"> <a *ngIf=\\\"errorCount > 0\\\" class=\\\"error\\\" (click)=\\\"onBadgeClick($event, 'Errors')\\\" tooltip=\\\"{{errorCount}} error(s)\\\" placement=\\\"right\\\"> <span class=\\\"error fa-stack fa-lg\\\"> <i class=\\\"fa fa-times fa-stack-1x fa-inverse\\\"></i> </span> </a> <a *ngIf=\\\"warningCount > 0\\\" class=\\\"warning\\\" (click)=\\\"onBadgeClick($event, 'Warnings')\\\" tooltip=\\\"{{warningCount}} warning(s)\\\" placement=\\\"right\\\"> <span class=\\\"warning fa-stack fa-lg\\\">  <i class=\\\"fa fa-exclamation fa-stack-1x fa-inverse\\\"></i> </span> </a> <a *ngIf=\\\"patchCount > 0\\\" class=\\\"patch\\\" (click)=\\\"onBadgeClick($event, 'Patches')\\\" tooltip=\\\"{{patchCount}} conflicts(s)\\\" placement=\\\"right\\\"> <span class=\\\"patch fa-stack fa-lg\\\"> <i class=\\\"fa fa-bolt fa-stack-1x fa-inverse\\\"></i> </span> </a> </div>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProblemsService, },\n{type: ChangeDetectorRef, },\n{type: JsonStoreService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'badgeClick': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}