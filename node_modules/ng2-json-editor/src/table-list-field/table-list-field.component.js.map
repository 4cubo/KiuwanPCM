{"version":3,"sources":["../../../staging/src/table-list-field/table-list-field.component.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;;;;;;;;;;;AAEF,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,uBAAA,EAAyB,iBAAA,EAAkB,MAAO,eAAA,CAAgB;AAK7F,OAAO,EAAE,0BAAA,EAA2B,MAAO,wBAAA,CAAyB;AACpE,OAAO,EAAE,iBAAA,EAAmB,gBAAA,EAAkB,eAAA,EAAiB,gBAAA,EAAkB,eAAA,EAAgB,MAAO,oBAAA,CAAqB;AAI7H;IAA6C,2CAA0B;IAMrE,iCAAmB,iBAAoC,EAC9C,eAAgC,EAChC,gBAAkC,EAClC,eAAgC,EAChC,gBAAkC,EAClC,iBAAoC;QAL7C,YAME,kBAAM,iBAAiB,EAAE,eAAe,EAAE,gBAAgB,EAAE,eAAe,EAAE,iBAAiB,CAAC,SAChG;QAPkB,uBAAiB,GAAjB,iBAAiB,CAAmB;QAC9C,qBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,qBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,uBAAiB,GAAjB,iBAAiB,CAAmB;;IAE7C,CAAC;IAED,sBAAI,0CAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxD,CAAC;;;OAAA;IAwBH,8BAAC;AAAD,CAzCA,AAyCC,CAzC4C,0BAA0B;;AAmBhE,kCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,kBAAkB;gBAC5B,MAAM,EAAE,CAAC,oJAAoJ,CAAC;gBAC9J,QAAQ,EAAE,69CAA69C;gBACv+C,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,sCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,eAAe,GAAG;IACzB,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAP6F,CAO7F,CAAC;AACK,sCAAc,GAA2C;IAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CACzB,CAAC","file":"table-list-field.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { List, Map, Set } from 'immutable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\n\nimport { AbstractListFieldComponent } from '../abstract-list-field';\nimport { AppGlobalsService, JsonStoreService, PathUtilService, KeysStoreService, ProblemsService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n\nexport class TableListFieldComponent extends AbstractListFieldComponent {\n\n   values: List<Map<string, any>>;\n   schema: JSONSchema;\n   path: Array<any>;\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public pathUtilService: PathUtilService,\n    public keysStoreService: KeysStoreService,\n    public changeDetectorRef: ChangeDetectorRef) {\n    super(appGlobalsService, problemsService, jsonStoreService, pathUtilService, changeDetectorRef);\n  }\n\n  get keys$(): ReplaySubject<Set<string>> {\n    return this.keysStoreService.forPath(this.pathString);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'table-list-field',\n  styles: [\"table.editable-inner-table { border: none; } table.editable-inner-table thead > tr > th { vertical-align: middle; border: none; color: #c1c1c1; } \"],\n  template: \"<div [id]=\\\"pathString\\\" [ngClass]=\\\"redLeftBorderClass\\\"> <table class=\\\"table editable-inner-table\\\"> <thead class=\\\"thead-inverse\\\"> <tr> <th *ngFor=\\\"let key of keys$ | async; trackBy:trackByElement\\\" [style.width]=\\\"schema.items.properties[key].columnWidth + '%'\\\"> {{key | underscoreToSpace}} </th> <th class=\\\"button-holder\\\" [class.sortable]=\\\"schema.sortable\\\"> <add-field-dropdown *ngIf=\\\"values.size > 0\\\" [fields]=\\\"keys$ | async\\\" [pathString]=\\\"pathString\\\" [schema]=\\\"schema.items\\\" [isDisabled]=\\\"disabled\\\"> <i class=\\\"fa fa-plus\\\"></i> <i class=\\\"fa fa-caret-down\\\"></i> </add-field-dropdown> </th> </tr> </thead> <tr *ngFor=\\\"let value of values; let i = index; trackBy:trackByIndex\\\" table-item-field [id]=\\\"getPathStringForChild(i)\\\" [value]=\\\"value\\\" [schema]=\\\"schema.items\\\" [path]=\\\"getPathForChild(i)\\\" [keys]=\\\"keys$ | async\\\"> <td *ngIf=\\\"values.size > 0\\\" class=\\\"button-holder\\\" [class.sortable]=\\\"schema.sortable\\\"> <list-action-group (onMove)=\\\"moveElement(i, $event)\\\" (onDelete)=\\\"deleteElement(i)\\\" [canMove]=\\\"schema.sortable\\\" [isDisabled]=\\\"disabled\\\"></list-action-group> </td> </tr> <tr *ngIf=\\\"removeJsonPatch\\\"> <patch-actions [patch]=\\\"removeJsonPatch\\\"></patch-actions> </tr> </table> <div *ngFor=\\\"let patch of addJsonPatches\\\"> <add-or-replace-patch [patch]=\\\"patch\\\"></add-or-replace-patch> </div> <div *ngIf=\\\"replaceJsonPatches && replaceJsonPatches[0]\\\"> <add-or-replace-patch [patch]=\\\"replaceJsonPatches[0]\\\"></add-or-replace-patch> </div> </div> \",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AppGlobalsService, },\n{type: ProblemsService, },\n{type: JsonStoreService, },\n{type: PathUtilService, },\n{type: KeysStoreService, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'values': [{ type: Input },],\n'schema': [{ type: Input },],\n'path': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}