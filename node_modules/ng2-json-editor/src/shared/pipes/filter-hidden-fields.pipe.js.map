{"version":3,"sources":["../../../../staging/src/shared/pipes/filter-hidden-fields.pipe.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;AAEF,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AAMpD;IAAA;IA4BA,CAAC;IA1BC;;;;;;OAMG;IACH,0CAAS,GAAT,UAAU,IAAiB,EAAE,MAAkB,EAAE,SAAkB;QACjE,IAAM,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACtC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,SAAS,CAAC;QAAC,CAAC;QAChC,MAAM,CAAC,IAAI;aACR,MAAM,CAAC,UAAA,GAAG;YACT,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACtB,MAAM,IAAI,KAAK,CAAC,OAAI,GAAG,6CAAuC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,EAAE,CAAC,CAAG,CAAC,CAAC;YAC7G,CAAC;YACD,MAAM,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,SAAS,CAAC;QAC/C,CAAC,CAAgB,CAAC;IACtB,CAAC;IASH,6BAAC;AAAD,CA5BA,AA4BC;;AARM,iCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBACnB,IAAI,EAAE,oBAAoB;aAC3B,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,qCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"filter-hidden-fields.pipe.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Set } from 'immutable';\n\nimport { JSONSchema } from '../interfaces';\n\n\nexport class FilterHiddenFieldsPipe implements PipeTransform {\n\n  /**\n   * It filters out `hidden` fields\n   *\n   * @param keys\n   * @param schema - the `schema` that has object schema which contains each key in `keys`\n   * @return - filtered keys\n   */\n  transform(keys: Set<string>, schema: JSONSchema, adminMode: boolean): Set<string> {\n    const schemaProps = schema.properties;\n    if (!keys) { return undefined; }\n    return keys\n      .filter(key => {\n        if (!schemaProps[key]) {\n          throw new Error(`\"${key}\" is not specified as property in \\n${JSON.stringify(schemaProps, undefined, 2)}`);\n        }\n        return !schemaProps[key].hidden || adminMode;\n      }) as Set<string>;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'filterHiddenFields',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}