{"version":3,"sources":["../../../../staging/src/shared/pipes/self-or-empty.pipe.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;AAEF,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AAGpD,OAAO,EAAE,iBAAA,EAAkB,MAAO,aAAA,CAAc;AAKhD;IAEE,yBAAmB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAG,CAAC;IAE3D;;;;;OAKG;IACH,mCAAS,GAAT,UAAU,KAAU,EAAE,MAAkB;QACtC,MAAM,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC3E,CAAC;IAUH,sBAAC;AAAD,CAtBA,AAsBC;;AATM,0BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBACnB,IAAI,EAAE,aAAa;aACpB,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,8BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAF6F,CAE7F,CAAC","file":"self-or-empty.pipe.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { List } from 'immutable';\n\nimport { EmptyValueService } from '../services';\nimport { JSONSchema } from '../interfaces';\n\n\n\nexport class SelfOrEmptyPipe implements PipeTransform {\n\n  constructor(public emptyValueService: EmptyValueService) {}\n\n  /**\n   * Transforms a value to empty value if it is undefined,\n   * returns self if it is already defined\n   *\n   * @return - empty value if given value is undefined or value itself.\n   */\n  transform(value: any, schema: JSONSchema): any {\n    return value ? value : this.emptyValueService.generateEmptyValue(schema);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'selfOrEmpty',\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: EmptyValueService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}