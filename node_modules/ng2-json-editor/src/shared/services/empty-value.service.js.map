{"version":3,"sources":["../../../../staging/src/shared/services/empty-value.service.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;AAEF,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAO,MAAO,WAAA,CAAY;AAKnC;IAAA;IAqDA,CAAC;IA9CC,8CAAkB,GAAlB,UAAmB,MAAkB;QACnC,IAAM,UAAU,GAAG,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC,CAAC;QAC9D,EAAE,CAAC,CAAC,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,UAAU,CAAC;QACpB,CAAC;IACH,CAAC;IAEO,yDAA6B,GAArC,UAAsC,MAAkB;QAAxD,iBA6BC;QA5BC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;QACxB,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC7B,IAAM,aAAW,GAAG,EAAE,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;iBAC3B,MAAM,CAAC,UAAA,IAAI;gBACV,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC;gBACvC,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,EAAE,CAAC;gBAC3C,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI;gBACb,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC3C,aAAW,CAAC,IAAI,CAAC,GAAG,KAAI,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,aAAW,CAAC;QACrB,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;YAC5B,IAAM,UAAU,GAAG,EAAE,CAAC;YACtB,IAAM,kBAAkB,GAAG,MAAM,CAAC,KAAK,CAAC;YACxC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,KAAK,cAAc,CAAC,CAAC,CAAC;gBAC5C,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC1E,CAAC;YACD,MAAM,CAAC,UAAU,CAAC;QACpB,CAAC;QAED,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC;IAQH,wBAAC;AAAD,CArDA,AAqDC;;AAnDgB,oCAAkB,GAAG;IAClC,QAAQ,EAAE,EAAE;IACZ,SAAS,EAAE,KAAK;CACjB,CAAC;AA0CG,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"empty-value.service.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport { fromJS } from 'immutable';\n\nimport { JSONSchema } from '../interfaces';\n\n\nexport class EmptyValueService {\n\n  private static defaultValueLookup = {\n    'string': '',\n    'boolean': false\n  };\n\n  generateEmptyValue(schema: JSONSchema): any {\n    const emptyValue = this.generateEmptyValueRecursively(schema);\n    if (typeof emptyValue === 'object') {\n      return fromJS(emptyValue);\n    } else {\n      return emptyValue;\n    }\n  }\n\n  private generateEmptyValueRecursively(schema: JSONSchema): any {\n    if (schema.default) {\n      return schema.default;\n    }\n\n    if (schema.type === 'object') {\n      const emptyObject = {};\n      Object.keys(schema.properties)\n        .filter(prop => {\n          const required = schema.required || [];\n          const alwaysShow = schema.alwaysShow || [];\n          return required.indexOf(prop) > -1 || alwaysShow.indexOf(prop) > -1;\n        }).forEach(prop => {\n          const propSchema = schema.properties[prop];\n          emptyObject[prop] = this.generateEmptyValueRecursively(propSchema);\n        });\n      return emptyObject;\n    }\n\n    if (schema.type === 'array') {\n      const emptyArray = [];\n      const arrayElementSchema = schema.items;\n      if (schema.componentType !== 'complex-list') {\n        emptyArray.push(this.generateEmptyValueRecursively(arrayElementSchema));\n      }\n      return emptyArray;\n    }\n\n    return EmptyValueService.defaultValueLookup[schema.type];\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}