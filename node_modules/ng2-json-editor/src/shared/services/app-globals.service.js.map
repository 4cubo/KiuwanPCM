{"version":3,"sources":["../../../../staging/src/shared/services/app-globals.service.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;AAEF,OAAO,EAAE,UAAA,EAAwB,MAAO,eAAA,CAAgB;AACxD,OAAO,EAAE,aAAA,EAAc,MAAO,oBAAA,CAAqB;AAKnD;IAAA;QAEW,eAAU,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;QACpD,kBAAa,GAAG,EAAE,CAAC;QACnB,kCAA6B,GAAkC,EAAE,CAAC;QAClE,cAAS,GAAiD,EAAE,CAAC;QAErD,eAAU,GAAG,KAAK,CAAC;IAqB7B,CAAC;IAnBC,sBAAI,wCAAS;aAKb;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAPD,UAAc,SAAkB;YAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC;;;OAAA;IAMD,sBAAI,4DAA6B;aAAjC;YACE,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAChE,CAAC;;;OAAA;IAQH,wBAAC;AAAD,CA5BA,AA4BC;;AANM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"app-globals.service.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable, TemplateRef } from '@angular/core';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { CategorizedValidationProblems, SchemaValidationProblems, ValidationProblem, JsonEditorConfig } from '../interfaces';\n\n\nexport class AppGlobalsService {\n\n  readonly adminMode$ = new ReplaySubject<boolean>(1);\n  activeTabName = '';\n  tabNameToFirstTopLevelElement: { [tabName: string]: string } = {};\n  templates: { [templateName: string]: TemplateRef<any> } = {};\n  config: JsonEditorConfig;\n  private _adminMode = false;\n\n  set adminMode(adminMode: boolean) {\n    this._adminMode = adminMode;\n    this.adminMode$.next(this._adminMode);\n  }\n\n  get adminMode() {\n    return this._adminMode;\n  }\n\n  get firstElementPathForCurrentTab() {\n    return this.tabNameToFirstTopLevelElement[this.activeTabName];\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}