{"version":3,"sources":["../../../../staging/src/shared/services/schema-validation.service.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;EAoBE;AAEF,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,KAAK,GAAA,MAAS,KAAA,CAAM;AAC3B,OAAO,KAAK,yBAAA,MAA+B,YAAA,CAAa;AAExD,OAAO,EAAE,iBAAA,EAAkB,MAAO,uBAAA,CAAwB;AAI1D;IA6CE,iCAAmB,iBAAoC;QAAvD,iBAYC;QAZkB,sBAAiB,GAAjB,iBAAiB,CAAmB;QA3CvD,2DAA2D;QACnD,QAAG,GAAG,IAAI,GAAG,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;QAE/D,yCAAyC;QACjC,aAAQ,GAAG,IAAI,MAAM,CAC3B,GAAG;YACH,sBAAsB;YACtB,uBAAuB;YACvB,2BAA2B;YAC3B,sBAAsB;YACtB,KAAK;YACL,uBAAuB;YACvB,2BAA2B;YAC3B,8BAA8B;YAC9B,+CAA+C;YAC/C,oDAAoD;YACpD,oCAAoC;YACpC,oCAAoC;YACpC,uCAAuC;YACvC,wCAAwC;YACxC,0CAA0C;YAC1C,wCAAwC;YACxC,4CAA4C;YAC5C,gDAAgD;YAChD,GAAG;YACH,WAAW;YACX,GAAG;YACH,YAAY;YACZ,4DAA4D;YAC5D,cAAc;YACd,gEAAgE;YAChE,iBAAiB;YACjB,qCAAqC;YACrC,uBAAuB;YACvB,MAAM;YACN,GAAG;YACH,cAAc;YACd,gBAAgB;YAChB,gBAAgB;YAChB,gBAAgB;YAChB,GAAG,EAAE,GAAG,CACT,CAAC;QAGA,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEpC,kFAAkF;QAClF,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;YAC1F,IAAM,eAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,sBAAsB,CAAC;YAE3E,MAAM,CAAC,IAAI,CAAC,eAAa,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;gBACpC,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,eAAa,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,+CAAa,GAAb,UAAc,KAAU,EAAE,MAAkB;QAC1C,IAAM,gBAAgB,GAAG,EAAE,CAAC;QAE5B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;gBAC3B,gBAAgB,CAAC,IAAI,CAAC;oBACpB,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,IAAI,EAAE,OAAO;iBACd,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,gBAAgB,CAAC;IAC1B,CAAC;IASH,8BAAC;AAAD,CAtFA,AAsFC;;AAPM,kCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,sCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAF6F,CAE7F,CAAC","file":"schema-validation.service.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport * as Ajv from 'ajv';\nimport * as enableCustomErrorMessages from 'ajv-errors';\n\nimport { AppGlobalsService } from './app-globals.service';\nimport { JSONSchema, ValidationProblem } from '../interfaces';\n\n\nexport class SchemaValidationService {\n\n  // `jsonPointer: true` is required for `avj-errors` package\n  private ajv = new Ajv({ allErrors: true, jsonPointers: true });\n\n  // https://gist.github.com/dperini/729294\n  private reWebUrl = new RegExp(\n    '^' +\n    // protocol identifier\n    '(?:(?:https?|ftp)://)' +\n    // user:pass authentication\n    '(?:\\\\S+(?::\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    'localhost' +\n    '|' +\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\n    // TLD may end with dot\n    '\\\\.?' +\n    ')' +\n    // port number\n    '(?::\\\\d{2,5})?' +\n    // resource path\n    '(?:[/?#]\\\\S*)?' +\n    '$', 'i'\n  );\n\n  constructor(public appGlobalsService: AppGlobalsService) {\n    enableCustomErrorMessages(this.ajv);\n\n    //  ajv didn't support format:url, so was added using web url regex for validation\n    this.ajv.addFormat('url', this.reWebUrl);\n    if (this.appGlobalsService.config && this.appGlobalsService.config.customFormatValidation) {\n      const customFormats = this.appGlobalsService.config.customFormatValidation;\n\n      Object.keys(customFormats).forEach(key => {\n        this.ajv.addFormat(key, customFormats[key].formatChecker);\n      });\n    }\n  }\n\n  /**\n   * Validates a specific value against schema\n   *\n   * Uses: ajv package for json-schema validation\n   *\n   */\n  validateValue(value: any, schema: JSONSchema): Array<ValidationProblem> {\n    const validationErrors = [];\n\n    if (!this.ajv.validate(schema, value)) {\n      this.ajv.errors.forEach(error => {\n        validationErrors.push({\n          message: error.message,\n          type: 'Error'\n        });\n      });\n    }\n    return validationErrors;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AppGlobalsService, },\n];\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}