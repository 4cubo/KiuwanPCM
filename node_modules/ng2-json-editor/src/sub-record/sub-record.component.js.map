{"version":3,"sources":["../../../staging/src/sub-record/sub-record.component.ts"],"names":[],"mappings":"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","file":"sub-record.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { Map, Set } from 'immutable';\n\nimport { PathCache, JSONSchema } from '../shared/interfaces';\nimport { JsonStoreService, AppGlobalsService, TabsUtilService, KeysStoreService } from '../shared/services';\n\n\nexport class SubRecordComponent implements OnChanges {\n   value: Map<string, any>;\n   schema: JSONSchema;\n   tabName: string;\n   keys: Set<string>;\n   pathString: string;\n\n  keysByType: { others: Set<string>, toggles: Set<string> };\n  pathCache: PathCache = {};\n\n  constructor(public jsonStoreService: JsonStoreService,\n    public appGlobalsService: AppGlobalsService,\n    public tabsUtilService: TabsUtilService,\n    public keysStoreService: KeysStoreService) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['keys']) {\n      let keys;\n      if (this.tabName) {\n        const keyToTabName = this.tabsUtilService.getSchemaKeyToTabName(this.appGlobalsService.config.tabsConfig, this.schema);\n        keys = this.keys\n          .filter(key => keyToTabName[key] === this.tabName);\n      } else {\n        keys = this.keys;\n      }\n      this.keysByType = keys\n        .groupBy(key => this.isToggle(key) ? 'toggles' : 'others')\n        .toObject() as any;\n    }\n  }\n\n  // delete only work for others, not toggles (UPDATE: config comment if this changes)\n  deleteField(field: string) {\n    this.jsonStoreService.removeIn(this.getPathForChild(field));\n  }\n\n  getPathForChild(key: string): Array<any> {\n    if (!this.pathCache[key]) {\n      this.pathCache[key] = [key];\n    }\n    return this.pathCache[key];\n  }\n\n  onToggleValueChange(field: string, value: boolean) {\n    this.jsonStoreService.setIn(this.getPathForChild(field), value);\n  }\n\n  private isToggle(field: string): boolean {\n    return this.schema.properties[field].toggleColor !== undefined;\n  }\n\n  isDisabled(key): boolean {\n    return this.schema.properties[key].disabled && !this.appGlobalsService.adminMode ;\n  }\n\n  trackByElement(index: number, element: any): any {\n    return element;\n  }\n\n  getTitleDropdownItemTemplateNamesForChild(key: string): Array<string> {\n    return this.schema.properties[key].titleDropdownItemTemplateNames;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'sub-record',\n  styles: [\"tr.align-right td:first-child { width: 100%; } tr.align-right td:first-child slide-toggle { float: right; } \"],\n  template: \"<div class=\\\"record-fields-container\\\"> <table class=\\\"table\\\"> <div class=\\\"field-wrapper\\\"> <tr *ngIf=\\\"keysByType.toggles\\\" class=\\\"align-right\\\"> <td *ngFor=\\\"let key of keysByType.toggles; trackBy:trackByElement\\\"> <slide-toggle [id]=\\\"'/' + key\\\" [value]=\\\"value.get(key) | selfOrEmpty:schema.properties[key]\\\" (valueChange)=\\\"onToggleValueChange(key, $event)\\\" [onText]=\\\"key\\\" [offText]=\\\"key\\\" [onColor]=\\\"schema.properties[key].toggleColor\\\"></slide-toggle> </td> </tr> </div> <div *ngIf=\\\"keysByType.others\\\"> <div class=\\\"field-wrapper\\\" *ngFor=\\\"let key of keysByType.others | setFirstElementPath:tabName; trackBy:trackByElement\\\"> <tr> <td class=\\\"label-holder\\\"> <title-dropdown [title]=\\\"key | underscoreToSpace\\\" [isDisabled]=\\\"isDisabled(key)\\\"> <li *ngIf=\\\"schema.properties[key].type === 'array'\\\" class=\\\"title-dropdown-item\\\"> <add-new-element-button [path]=\\\"getPathForChild(key)\\\" [schema]=\\\"schema.properties[key]\\\"></add-new-element-button> </li> <li class=\\\"title-dropdown-item\\\"> <button type=\\\"button\\\" class=\\\"editor-btn-delete editor-btn-delete-text\\\" (click)=\\\"deleteField(key)\\\">Delete</button> </li> <ng-container *ngIf=\\\"getTitleDropdownItemTemplateNamesForChild(key)\\\"> <li *ngFor=\\\"let templateName of getTitleDropdownItemTemplateNamesForChild(key)\\\" class=\\\"title-dropdown-item custom-title-dropdown-item\\\"> <ng-template [ngTemplateOutlet]=\\\"appGlobalsService.templates[templateName]\\\"></ng-template> </li> </ng-container> <li class=\\\"divider\\\"></li> <li class=\\\"title-dropdown-item\\\" (click)=\\\"$event.stopPropagation()\\\"> <find-replace [path]=\\\"getPathForChild(key)\\\" [schema]=\\\"schema.properties[key]\\\"></find-replace> </li> </title-dropdown> </td> </tr> <tr> <td> <any-type-field [value]=\\\"value.get(key) | selfOrEmpty:schema.properties[key]\\\" [schema]=\\\"schema.properties[key]\\\" [path]=\\\"getPathForChild(key)\\\"></any-type-field> </td> </tr> </div> </div> </table> </div> \",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: JsonStoreService, },\n{type: AppGlobalsService, },\n{type: TabsUtilService, },\n{type: KeysStoreService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'schema': [{ type: Input },],\n'tabName': [{ type: Input },],\n'keys': [{ type: Input },],\n'pathString': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}