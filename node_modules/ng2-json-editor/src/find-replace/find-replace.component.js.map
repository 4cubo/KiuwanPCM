{"version":3,"sources":["../../../staging/src/find-replace/find-replace.component.ts"],"names":[],"mappings":"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","file":"find-replace.component.js","sourceRoot":"","sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { List, Map } from 'immutable';\n\nimport { FindReplaceAllService, JsonStoreService, ModalService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n\nexport class FindReplaceComponent {\n\n   path: Array<any>;\n   schema: JSONSchema;\n\n  private replaced: List<any> | Map<string, any>;\n\n  find: string;\n  replace: string;\n  exactPhrase: boolean;\n\n  constructor(public changeDetectionRef: ChangeDetectorRef,\n    public domSanitizer: DomSanitizer,\n    public findReplaceAllService: FindReplaceAllService,\n    public jsonStoreService: JsonStoreService,\n    public modalService: ModalService) { }\n\n  onKeypress(key: string) {\n    if (key === 'Enter') {\n      this.findAndReplace();\n    }\n  }\n\n  findAndReplace() {\n    if (!(this.find && this.replace)) {\n      return;\n    }\n    const value = this.jsonStoreService.getIn(this.path);\n    const result = this.findReplaceAllService\n      .findReplaceInImmutable(value, this.schema, this.find, this.replace, this.exactPhrase);\n    this.replaced = result.replaced;\n    const stringyfiedDiffHtml = JSON.stringify(result.diffHtml, undefined, 2);\n    this.modalService.displayModal({\n      title: 'After Replace',\n      bodyHtml: this.domSanitizer.bypassSecurityTrustHtml(`<pre class=\"max-height-70-vh\"><code>${stringyfiedDiffHtml}</code></pre>`),\n      type: 'confirm',\n      onConfirm: () => {\n        this.modalService.closeCurrentModal();\n        this.jsonStoreService.setIn(this.path, this.replaced);\n        this.cleanParameters();\n      }\n    });\n  }\n\n  private cleanParameters() {\n    this.find = '';\n    this.replace = '';\n    this.exactPhrase = false;\n    this.changeDetectionRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'find-replace',\n  styles: [\".find-replace-container { margin: 4px 3px 3px 2px; } .find-replace-container input { font-size: 13px; } .top-container-item { margin-bottom: 3px; } .bottom-container-item { margin-top: 5px; } .bottom-container-item i { font-size: 20px; float: right; padding-right: 2px; } label { font-size: 12px; font-weight: 400; color: #7e7e7e; } .horizontal-padding, .find-replace-container div { padding-right: 20px; padding-left: 20px; } \"],\n  template: \"<div class=\\\"find-replace-container\\\"> <div class=\\\"top-container-item\\\"> <input placeholder=\\\"Find\\\" [(ngModel)]=\\\"find\\\" (keypress)=\\\"onKeypress($event.key)\\\" /> </div> <div> <input placeholder=\\\"Replace\\\" [(ngModel)]=\\\"replace\\\" (keypress)=\\\"onKeypress($event.key)\\\" /> </div> <div class=\\\"bottom-container-item\\\"> <label> Exact phrase <input type=\\\"checkbox\\\" [(ngModel)]=\\\"exactPhrase\\\" (keypress)=\\\"onKeypress($event.key)\\\"/> </label> <i class=\\\"fa fa-arrow-circle-right\\\" (click)=\\\"findAndReplace()\\\"></i> </div> </div>\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: DomSanitizer, },\n{type: FindReplaceAllService, },\n{type: JsonStoreService, },\n{type: ModalService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'path': [{ type: Input },],\n'schema': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}